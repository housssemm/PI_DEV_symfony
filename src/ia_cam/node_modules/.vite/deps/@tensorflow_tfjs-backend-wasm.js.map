{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:path", "browser-external:worker_threads", "browser-external:perf_hooks", "browser-external:os", "../../@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js", "../../@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.worker.js", "../../@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js", "../../../../tfjs-backend-wasm/src/kernels/types.ts", "../../../../tfjs-backend-wasm/src/kernels/_FusedMatMul.ts", "../../../../tfjs-backend-wasm/src/kernels/unary_kernel.ts", "../../../../tfjs-backend-wasm/src/kernels/Abs.ts", "../../../../tfjs-backend-wasm/src/kernels/Acos.ts", "../../../../tfjs-backend-wasm/src/kernels/Acosh.ts", "../../../../tfjs-backend-wasm/src/kernels/binary_kernel.ts", "../../../../tfjs-backend-wasm/src/kernels/Add.ts", "../../../../tfjs-backend-wasm/src/kernels/AddN.ts", "../../../../tfjs-backend-wasm/src/kernels/Identity.ts", "../../../../tfjs-backend-wasm/src/kernels/Transpose.ts", "../../../../tfjs-backend-wasm/src/kernels/kernel_utils.ts", "../../../../tfjs-backend-wasm/src/kernels/All.ts", "../../../../tfjs-backend-wasm/src/kernels/Any.ts", "../../../../tfjs-backend-wasm/src/kernels/argminmax_kernel.ts", "../../../../tfjs-backend-wasm/src/kernels/ArgMax.ts", "../../../../tfjs-backend-wasm/src/kernels/ArgMin.ts", "../../../../tfjs-backend-wasm/src/kernels/Asin.ts", "../../../../tfjs-backend-wasm/src/kernels/Asinh.ts", "../../../../tfjs-backend-wasm/src/kernels/Atan.ts", "../../../../tfjs-backend-wasm/src/kernels/Atan2.ts", "../../../../tfjs-backend-wasm/src/kernels/Atanh.ts", "../../../../tfjs-backend-wasm/src/kernels/AvgPool.ts", "../../../../tfjs-backend-wasm/src/kernels/AvgPool3D.ts", "../../../../tfjs-backend-wasm/src/kernels/AvgPool3DGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/AvgPoolGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/Reshape.ts", "../../../../tfjs-backend-wasm/src/kernels/BatchMatMul.ts", "../../../../tfjs-backend-wasm/src/kernels/Slice.ts", "../../../../tfjs-backend-wasm/src/kernels/BatchToSpaceND.ts", "../../../../tfjs-backend-wasm/src/kernels/Bincount.ts", "../../../../tfjs-backend-wasm/src/kernels/BitwiseAnd.ts", "../../../../tfjs-backend-wasm/src/kernels/BroadcastArgs.ts", "../../../../tfjs-backend-wasm/src/kernels/Cast.ts", "../../../../tfjs-backend-wasm/src/kernels/Ceil.ts", "../../../../tfjs-backend-wasm/src/kernels/ClipByValue.ts", "../../../../tfjs-backend-wasm/src/kernels/Concat.ts", "../../../../tfjs-backend-wasm/src/kernels/Conv2D.ts", "../../../../tfjs-backend-wasm/src/kernels/Conv2DBackpropInput.ts", "../../../../tfjs-backend-wasm/src/kernels/Conv3D.ts", "../../../../tfjs-backend-wasm/src/kernels/Conv3DBackpropFilterV2.ts", "../../../../tfjs-backend-wasm/src/kernels/Conv3DBackpropInputV2.ts", "../../../../tfjs-backend-wasm/src/kernels/Cos.ts", "../../../../tfjs-backend-wasm/src/kernels/Cosh.ts", "../../../../tfjs-backend-wasm/src/kernels/CropAndResize.ts", "../../../../tfjs-backend-wasm/src/kernels/Cumprod.ts", "../../../../tfjs-backend-wasm/src/kernels/Cumsum.ts", "../../../../tfjs-backend-wasm/src/kernels/DenseBincount.ts", "../../../../tfjs-backend-wasm/src/kernels/DepthToSpace.ts", "../../../../tfjs-backend-wasm/src/kernels/DepthwiseConv2dNative.ts", "../../../../tfjs-backend-wasm/src/kernels/Diag.ts", "../../../../tfjs-backend-wasm/src/kernels/Dilation2D.ts", "../../../../tfjs-backend-wasm/src/kernels/Dilation2DBackpropFilter.ts", "../../../../tfjs-backend-wasm/src/kernels/Dilation2DBackpropInput.ts", "../../../../tfjs-backend-wasm/src/kernels/Elu.ts", "../../../../tfjs-backend-wasm/src/kernels/EluGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/Equal.ts", "../../../../tfjs-backend-wasm/src/kernels/Erf.ts", "../../../../tfjs-backend-wasm/src/kernels/Exp.ts", "../../../../tfjs-backend-wasm/src/kernels/ExpandDims.ts", "../../../../tfjs-backend-wasm/src/kernels/Expm1.ts", "../../../../tfjs-backend-wasm/src/kernels/Fill.ts", "../../../../tfjs-backend-wasm/src/kernels/FlipLeftRight.ts", "../../../../tfjs-backend-wasm/src/kernels/Floor.ts", "../../../../tfjs-backend-wasm/src/kernels/FloorDiv.ts", "../../../../tfjs-backend-wasm/src/kernels/FusedBatchNorm.ts", "../../../../tfjs-backend-wasm/src/kernels/FusedConv2D.ts", "../../../../tfjs-backend-wasm/src/kernels/FusedDepthwiseConv2D.ts", "../../../../tfjs-backend-wasm/src/kernels/GatherNd.ts", "../../../../tfjs-backend-wasm/src/kernels/GatherV2.ts", "../../../../tfjs-backend-wasm/src/kernels/Greater.ts", "../../../../tfjs-backend-wasm/src/kernels/GreaterEqual.ts", "../../../../tfjs-backend-wasm/src/kernels/IsFinite.ts", "../../../../tfjs-backend-wasm/src/kernels/IsInf.ts", "../../../../tfjs-backend-wasm/src/kernels/IsNan.ts", "../../../../tfjs-backend-wasm/src/kernels/LeakyRelu.ts", "../../../../tfjs-backend-wasm/src/kernels/Less.ts", "../../../../tfjs-backend-wasm/src/kernels/LessEqual.ts", "../../../../tfjs-backend-wasm/src/kernels/LinSpace.ts", "../../../../tfjs-backend-wasm/src/kernels/Log.ts", "../../../../tfjs-backend-wasm/src/kernels/Log1p.ts", "../../../../tfjs-backend-wasm/src/kernels/LogicalAnd.ts", "../../../../tfjs-backend-wasm/src/kernels/LogicalNot.ts", "../../../../tfjs-backend-wasm/src/kernels/LogicalOr.ts", "../../../../tfjs-backend-wasm/src/kernels/LogicalXor.ts", "../../../../tfjs-backend-wasm/src/kernels/LRN.ts", "../../../../tfjs-backend-wasm/src/kernels/LRNGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/Max.ts", "../../../../tfjs-backend-wasm/src/kernels/Maximum.ts", "../../../../tfjs-backend-wasm/src/kernels/MaxPool.ts", "../../../../tfjs-backend-wasm/src/kernels/MaxPool3D.ts", "../../../../tfjs-backend-wasm/src/kernels/MaxPool3DGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/MaxPoolGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/MaxPoolWithArgmax.ts", "../../../../tfjs-backend-wasm/src/kernels/Mean.ts", "../../../../tfjs-backend-wasm/src/kernels/Min.ts", "../../../../tfjs-backend-wasm/src/kernels/Minimum.ts", "../../../../tfjs-backend-wasm/src/kernels/MirrorPad.ts", "../../../../tfjs-backend-wasm/src/kernels/Softmax.ts", "../../../../tfjs-backend-wasm/src/kernels/Multinomial.ts", "../../../../tfjs-backend-wasm/src/kernels/Mod.ts", "../../../../tfjs-backend-wasm/src/kernels/Multiply.ts", "../../../../tfjs-backend-wasm/src/kernels/Neg.ts", "../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppression_util.ts", "../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV3.ts", "../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV4.ts", "../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV5.ts", "../../../../tfjs-backend-wasm/src/kernels/NotEqual.ts", "../../../../tfjs-backend-wasm/src/kernels/OneHot.ts", "../../../../tfjs-backend-wasm/src/kernels/OnesLike.ts", "../../../../tfjs-backend-wasm/src/kernels/Pack.ts", "../../../../tfjs-backend-wasm/src/kernels/PadV2.ts", "../../../../tfjs-backend-wasm/src/kernels/Pow.ts", "../../../../tfjs-backend-wasm/src/kernels/Prelu.ts", "../../../../tfjs-backend-wasm/src/kernels/Prod.ts", "../../../../tfjs-backend-wasm/src/kernels/Range.ts", "../../../../tfjs-backend-wasm/src/kernels/RealDiv.ts", "../../../../tfjs-backend-wasm/src/kernels/Reciprocal.ts", "../../../../tfjs-backend-wasm/src/kernels/Relu.ts", "../../../../tfjs-backend-wasm/src/kernels/Relu6.ts", "../../../../tfjs-backend-wasm/src/kernels/ResizeBilinear.ts", "../../../../tfjs-backend-wasm/src/kernels/ResizeBilinearGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/ResizeNearestNeighbor.ts", "../../../../tfjs-backend-wasm/src/kernels/ResizeNearestNeighborGrad.ts", "../../../../tfjs-backend-wasm/src/kernels/Reverse.ts", "../../../../tfjs-backend-wasm/src/kernels/RotateWithOffset.ts", "../../../../tfjs-backend-wasm/src/kernels/Round.ts", "../../../../tfjs-backend-wasm/src/kernels/Rsqrt.ts", "../../../../tfjs-backend-wasm/src/kernels/ScatterNd.ts", "../../../../tfjs-backend-wasm/src/kernels/SearchSorted.ts", "../../../../tfjs-backend-wasm/src/kernels/Select.ts", "../../../../tfjs-backend-wasm/src/kernels/Selu.ts", "../../../../tfjs-backend-wasm/src/kernels/Sigmoid.ts", "../../../../tfjs-backend-wasm/src/kernels/Sign.ts", "../../../../tfjs-backend-wasm/src/kernels/Sin.ts", "../../../../tfjs-backend-wasm/src/kernels/Sinh.ts", "../../../../tfjs-backend-wasm/src/kernels/Softplus.ts", "../../../../tfjs-backend-wasm/src/kernels/SpaceToBatchND.ts", "../../../../tfjs-backend-wasm/src/kernels/SparseFillEmptyRows.ts", "../../../../tfjs-backend-wasm/src/kernels/SparseReshape.ts", "../../../../tfjs-backend-wasm/src/kernels/SparseSegmentReduction.ts", "../../../../tfjs-backend-wasm/src/kernels/SparseSegmentMean.ts", "../../../../tfjs-backend-wasm/src/kernels/SparseSegmentSum.ts", "../../../../tfjs-backend-wasm/src/kernels/SparseToDense.ts", "../../../../tfjs-backend-wasm/src/kernels/SplitV.ts", "../../../../tfjs-backend-wasm/src/kernels/Sqrt.ts", "../../../../tfjs-backend-wasm/src/kernels/Square.ts", "../../../../tfjs-backend-wasm/src/kernels/SquaredDifference.ts", "../../../../tfjs-backend-wasm/src/kernels/Step.ts", "../../../../tfjs-backend-wasm/src/kernels/StridedSlice.ts", "../../../../tfjs-backend-wasm/src/kernels/StringNGrams.ts", "../../../../tfjs-backend-wasm/src/kernels/StringSplit.ts", "../../../../tfjs-backend-wasm/src/kernels/StringToHashBucketFast.ts", "../../../../tfjs-backend-wasm/src/kernels/Sub.ts", "../../../../tfjs-backend-wasm/src/kernels/Sum.ts", "../../../../tfjs-backend-wasm/src/kernels/Tan.ts", "../../../../tfjs-backend-wasm/src/kernels/Tanh.ts", "../../../../tfjs-backend-wasm/src/kernels/TensorScatterUpdate.ts", "../../../../tfjs-backend-wasm/src/kernels/Tile.ts", "../../../../tfjs-backend-wasm/src/kernels/TopK.ts", "../../../../tfjs-backend-wasm/src/kernels/Transform.ts", "../../../../tfjs-backend-wasm/src/kernels/Unique.ts", "../../../../tfjs-backend-wasm/src/kernels/Unpack.ts", "../../../../tfjs-backend-wasm/src/kernels/ZerosLike.ts", "../../../../tfjs-backend-wasm/src/register_all_kernels.ts", "../../../../tfjs-backend-wasm/src/flags_wasm.ts", "../../../../tfjs-backend-wasm/src/backend_wasm.ts", "../../../../tfjs-backend-wasm/src/version.ts", "../../../../tfjs-backend-wasm/src/base.ts"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"worker_threads\" has been externalized for browser compatibility. Cannot access \"worker_threads.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"perf_hooks\" has been externalized for browser compatibility. Cannot access \"perf_hooks.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\nvar WasmBackendModuleThreadedSimd = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!=\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};let nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!ENVIRONMENT_IS_NODE){read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance==\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){defaultPrint=str=>fs.writeSync(1,str+\"\\n\");defaultPrintErr=str=>fs.writeSync(2,str+\"\\n\")}var out=Module[\"print\"]||defaultPrint;var err=Module[\"printErr\"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer?heapOrArray.slice(idx,endPtr):heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":4294967296/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){err(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;registerTLSInit(Module[\"asm\"][\"_emscripten_tls_init\"]);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function killThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0}function cancelThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];assert(worker);PThread.returnWorkerToPool(worker)}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);PThread.pthreads[threadParams.pthread_ptr]=worker;worker.pthread_ptr=threadParams.pthread_ptr;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"pthread_ptr\":threadParams.pthread_ptr};worker.runPthread=()=>{if(ENVIRONMENT_IS_NODE){worker.ref()}worker.postMessage(msg,threadParams.transferList);delete worker.runPthread};if(worker.loaded){worker.runPthread()}return 0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _proc_exit(code){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,code);EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw\"unwind\"}else{}}_proc_exit(status)}var _exit=exitJS;function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;while(pthreadPoolSize--){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var worker of Object.values(PThread.pthreads)){PThread.returnWorkerToPool(worker)}for(var worker of PThread.unusedWorkers){worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){var pthread_ptr=worker.pthread_ptr;delete PThread.pthreads[pthread_ptr];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0;if(ENVIRONMENT_IS_NODE){worker.unref()}__emscripten_thread_free_data(pthread_ptr)},receiveObjectTransfer:function(data){},threadInitTLS:function(){PThread.tlsInitFunctions.forEach(f=>f())},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=e=>{var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread_ptr)PThread.currentProxiedOperationCallerThread=worker.pthread_ptr;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var targetWorker=PThread.pthreads[d.targetThread];if(targetWorker){targetWorker.postMessage(d,d[\"transferList\"])}else{err('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processProxyingQueue\"){executeNotifiedProxyingQueue(d[\"queue\"])}else if(cmd===\"spawnThread\"){spawnThread(d)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(ENVIRONMENT_IS_NODE){worker.unref()}if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread()}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(d.target===\"setimmediate\"){worker.postMessage(d)}else if(cmd===\"callHandler\"){Module[d[\"handler\"]](...d[\"args\"])}else if(cmd){err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=e=>{var message=\"worker sent an error!\";err(message+\" \"+e.filename+\":\"+e.lineno+\": \"+e.message);throw e};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(e){worker.onerror(e)});worker.on(\"detachedExit\",function(){})}var handlers=[];var knownHandlers=[\"onExit\",\"onAbort\",\"print\",\"printErr\"];for(var handler of knownHandlers){if(Module.hasOwnProperty(handler)){handlers.push(handler)}}worker.postMessage({\"cmd\":\"load\",\"handlers\":handlers,\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var worker;var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");worker=new Worker(pthreadMainJs);PThread.unusedWorkers.push(worker)},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};Module[\"PThread\"]=PThread;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+52>>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+56>>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){var result=getWasmTableEntry(ptr)(arg);if(keepRuntimeAlive()){PThread.setExitStatus(result)}else{__emscripten_thread_exit(result)}}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function registerTLSInit(tlsInitFunc){PThread.tlsInitFunctions.push(tlsInitFunc)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInitTLS()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread})}function pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,pthread_ptr,attr,startRoutine,arg);return ___pthread_create_js(pthread_ptr,attr,startRoutine,arg)}function ___pthread_create_js(pthread_ptr,attr,startRoutine,arg){if(typeof SharedArrayBuffer==\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg)}if(error)return error;var threadParams={startRoutine:startRoutine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 65536}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function executeNotifiedProxyingQueue(queue){Atomics.store(GROWABLE_HEAP_I32(),queue>>2,1);if(_pthread_self()){__emscripten_proxy_execute_task_queue(queue)}Atomics.compareExchange(GROWABLE_HEAP_I32(),queue>>2,1,0)}Module[\"executeNotifiedProxyingQueue\"]=executeNotifiedProxyingQueue;function __emscripten_notify_task_queue(targetThreadId,currThreadId,mainThreadId,queue){if(targetThreadId==currThreadId){setTimeout(()=>executeNotifiedProxyingQueue(queue))}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processProxyingQueue\",\"queue\":queue})}else{var worker=PThread.pthreads[targetThreadId];if(!worker){return}worker.postMessage({\"cmd\":\"processProxyingQueue\",\"queue\":queue})}return 1}function __emscripten_set_offscreencanvas_size(target,width,height){return-1}function _abort(){abort(\"\")}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text=\"warning: \"+text;err(text)}}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.timeOrigin+performance.now();function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest>>>0,src>>>0,src+num>>>0)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(()=>{var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i>>>0]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i>>>0]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_unwind_to_js_event_loop(){throw\"unwind\"}function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd);return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,offset_low,offset_high,whence,newOffset);return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_U32()[iov>>>2];var len=GROWABLE_HEAP_U32()[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,GROWABLE_HEAP_U8()[ptr+j>>>0])}num+=len}GROWABLE_HEAP_U32()[pnum>>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer>>>0)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}PThread.init();var proxiedFunctionTable=[null,_proc_exit,exitOnMainThread,pthreadCreateProxied,_fd_close,_fd_seek,_fd_write];var asmLibraryArg={\"__emscripten_init_main_thread_js\":___emscripten_init_main_thread_js,\"__emscripten_thread_cleanup\":___emscripten_thread_cleanup,\"__pthread_create_js\":___pthread_create_js,\"_emscripten_default_pthread_stack_size\":__emscripten_default_pthread_stack_size,\"_emscripten_get_now_is_monotonic\":__emscripten_get_now_is_monotonic,\"_emscripten_notify_task_queue\":__emscripten_notify_task_queue,\"_emscripten_set_offscreencanvas_size\":__emscripten_set_offscreencanvas_size,\"abort\":_abort,\"emscripten_check_blocking_allowed\":_emscripten_check_blocking_allowed,\"emscripten_date_now\":_emscripten_date_now,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_get_now\":_emscripten_get_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_num_logical_cores\":_emscripten_num_logical_cores,\"emscripten_receive_on_main_thread_js\":_emscripten_receive_on_main_thread_js,\"emscripten_resize_heap\":_emscripten_resize_heap,\"emscripten_unwind_to_js_event_loop\":_emscripten_unwind_to_js_event_loop,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"memory\":wasmMemory||Module[\"wasmMemory\"]};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Acos=Module[\"_Acos\"]=function(){return(_Acos=Module[\"_Acos\"]=Module[\"asm\"][\"Acos\"]).apply(null,arguments)};var _Acosh=Module[\"_Acosh\"]=function(){return(_Acosh=Module[\"_Acosh\"]=Module[\"asm\"][\"Acosh\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _ArgMin=Module[\"_ArgMin\"]=function(){return(_ArgMin=Module[\"_ArgMin\"]=Module[\"asm\"][\"ArgMin\"]).apply(null,arguments)};var _Asin=Module[\"_Asin\"]=function(){return(_Asin=Module[\"_Asin\"]=Module[\"asm\"][\"Asin\"]).apply(null,arguments)};var _Asinh=Module[\"_Asinh\"]=function(){return(_Asinh=Module[\"_Asinh\"]=Module[\"asm\"][\"Asinh\"]).apply(null,arguments)};var _Atan=Module[\"_Atan\"]=function(){return(_Atan=Module[\"_Atan\"]=Module[\"asm\"][\"Atan\"]).apply(null,arguments)};var _Atan2=Module[\"_Atan2\"]=function(){return(_Atan2=Module[\"_Atan2\"]=Module[\"asm\"][\"Atan2\"]).apply(null,arguments)};var _Atanh=Module[\"_Atanh\"]=function(){return(_Atanh=Module[\"_Atanh\"]=Module[\"asm\"][\"Atanh\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _AvgPool3D=Module[\"_AvgPool3D\"]=function(){return(_AvgPool3D=Module[\"_AvgPool3D\"]=Module[\"asm\"][\"AvgPool3D\"]).apply(null,arguments)};var _AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=function(){return(_AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=Module[\"asm\"][\"AvgPool3DGrad\"]).apply(null,arguments)};var _AvgPoolGrad=Module[\"_AvgPoolGrad\"]=function(){return(_AvgPoolGrad=Module[\"_AvgPoolGrad\"]=Module[\"asm\"][\"AvgPoolGrad\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Bincount=Module[\"_Bincount\"]=function(){return(_Bincount=Module[\"_Bincount\"]=Module[\"asm\"][\"Bincount\"]).apply(null,arguments)};var _BitwiseAnd=Module[\"_BitwiseAnd\"]=function(){return(_BitwiseAnd=Module[\"_BitwiseAnd\"]=Module[\"asm\"][\"BitwiseAnd\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Conv3D=Module[\"_Conv3D\"]=function(){return(_Conv3D=Module[\"_Conv3D\"]=Module[\"asm\"][\"Conv3D\"]).apply(null,arguments)};var _Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=function(){return(_Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=Module[\"asm\"][\"Conv3DBackpropFilterV2\"]).apply(null,arguments)};var _Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=function(){return(_Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=Module[\"asm\"][\"Conv3DBackpropInputV2\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DenseBincount=Module[\"_DenseBincount\"]=function(){return(_DenseBincount=Module[\"_DenseBincount\"]=Module[\"asm\"][\"DenseBincount\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Diag=Module[\"_Diag\"]=function(){return(_Diag=Module[\"_Diag\"]=Module[\"asm\"][\"Diag\"]).apply(null,arguments)};var _Dilation2D=Module[\"_Dilation2D\"]=function(){return(_Dilation2D=Module[\"_Dilation2D\"]=Module[\"asm\"][\"Dilation2D\"]).apply(null,arguments)};var _Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=function(){return(_Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=Module[\"asm\"][\"Dilation2DBackpropFilter\"]).apply(null,arguments)};var _Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=function(){return(_Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=Module[\"asm\"][\"Dilation2DBackpropInput\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _EluGrad=Module[\"_EluGrad\"]=function(){return(_EluGrad=Module[\"_EluGrad\"]=Module[\"asm\"][\"EluGrad\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Erf=Module[\"_Erf\"]=function(){return(_Erf=Module[\"_Erf\"]=Module[\"asm\"][\"Erf\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _Expm1=Module[\"_Expm1\"]=function(){return(_Expm1=Module[\"_Expm1\"]=Module[\"asm\"][\"Expm1\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _IsFinite=Module[\"_IsFinite\"]=function(){return(_IsFinite=Module[\"_IsFinite\"]=Module[\"asm\"][\"IsFinite\"]).apply(null,arguments)};var _IsInf=Module[\"_IsInf\"]=function(){return(_IsInf=Module[\"_IsInf\"]=Module[\"asm\"][\"IsInf\"]).apply(null,arguments)};var _IsNan=Module[\"_IsNan\"]=function(){return(_IsNan=Module[\"_IsNan\"]=Module[\"asm\"][\"IsNan\"]).apply(null,arguments)};var _LRN=Module[\"_LRN\"]=function(){return(_LRN=Module[\"_LRN\"]=Module[\"asm\"][\"LRN\"]).apply(null,arguments)};var _LRNGrad=Module[\"_LRNGrad\"]=function(){return(_LRNGrad=Module[\"_LRNGrad\"]=Module[\"asm\"][\"LRNGrad\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _LinSpace=Module[\"_LinSpace\"]=function(){return(_LinSpace=Module[\"_LinSpace\"]=Module[\"asm\"][\"LinSpace\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _Log1p=Module[\"_Log1p\"]=function(){return(_Log1p=Module[\"_Log1p\"]=Module[\"asm\"][\"Log1p\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _MaxPool3D=Module[\"_MaxPool3D\"]=function(){return(_MaxPool3D=Module[\"_MaxPool3D\"]=Module[\"asm\"][\"MaxPool3D\"]).apply(null,arguments)};var _MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=function(){return(_MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=Module[\"asm\"][\"MaxPool3DGrad\"]).apply(null,arguments)};var _MaxPoolGrad=Module[\"_MaxPoolGrad\"]=function(){return(_MaxPoolGrad=Module[\"_MaxPoolGrad\"]=Module[\"asm\"][\"MaxPoolGrad\"]).apply(null,arguments)};var _MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=function(){return(_MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=Module[\"asm\"][\"MaxPoolWithArgmax\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Mod=Module[\"_Mod\"]=function(){return(_Mod=Module[\"_Mod\"]=Module[\"asm\"][\"Mod\"]).apply(null,arguments)};var _Multinomial=Module[\"_Multinomial\"]=function(){return(_Multinomial=Module[\"_Multinomial\"]=Module[\"asm\"][\"Multinomial\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Reciprocal=Module[\"_Reciprocal\"]=function(){return(_Reciprocal=Module[\"_Reciprocal\"]=Module[\"asm\"][\"Reciprocal\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=function(){return(_ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=Module[\"asm\"][\"ResizeBilinearGrad\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=function(){return(_ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=Module[\"asm\"][\"ResizeNearestNeighborGrad\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SearchSorted=Module[\"_SearchSorted\"]=function(){return(_SearchSorted=Module[\"_SearchSorted\"]=Module[\"asm\"][\"SearchSorted\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Selu=Module[\"_Selu\"]=function(){return(_Selu=Module[\"_Selu\"]=Module[\"asm\"][\"Selu\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sign=Module[\"_Sign\"]=function(){return(_Sign=Module[\"_Sign\"]=Module[\"asm\"][\"Sign\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Sinh=Module[\"_Sinh\"]=function(){return(_Sinh=Module[\"_Sinh\"]=Module[\"asm\"][\"Sinh\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _Softplus=Module[\"_Softplus\"]=function(){return(_Softplus=Module[\"_Softplus\"]=Module[\"asm\"][\"Softplus\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _SparseToDense=Module[\"_SparseToDense\"]=function(){return(_SparseToDense=Module[\"_SparseToDense\"]=Module[\"asm\"][\"SparseToDense\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=function(){return(_TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=Module[\"asm\"][\"TensorScatterUpdate\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var __emscripten_tls_init=Module[\"__emscripten_tls_init\"]=function(){return(__emscripten_tls_init=Module[\"__emscripten_tls_init\"]=Module[\"asm\"][\"_emscripten_tls_init\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"pthread_self\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null,arguments)};var __emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=function(){return(__emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=Module[\"asm\"][\"_emscripten_thread_crashed\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=function(){return(_emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null,arguments)};var __emscripten_proxy_execute_task_queue=Module[\"__emscripten_proxy_execute_task_queue\"]=function(){return(__emscripten_proxy_execute_task_queue=Module[\"__emscripten_proxy_execute_task_queue\"]=Module[\"asm\"][\"_emscripten_proxy_execute_task_queue\"]).apply(null,arguments)};var __emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=function(){return(__emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null,arguments)};var __emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=function(){return(__emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"keepRuntimeAlive\"]=keepRuntimeAlive;Module[\"wasmMemory\"]=wasmMemory;Module[\"cwrap\"]=cwrap;Module[\"ExitStatus\"]=ExitStatus;Module[\"PThread\"]=PThread;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();startWorker(Module);return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n", "module.exports.wasmWorkerContents = `\"use strict\";var Module={};var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\");var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",data=>onmessage({data:data}));var fs=require(\"fs\");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,\"utf8\")+\"//# sourceURL=\"+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+\"\\n\");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;self.alert=threadAlert;Module[\"instantiateWasm\"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);receiveInstance(instance);Module[\"wasmModule\"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({\"cmd\":\"loaded\"})};self.onmessage=e=>{try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:\"callHandler\",handler:handler,args:[...arguments]})}}Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob==\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd===\"run\"){Module[\"__emscripten_thread_init\"](e.data.pthread_ptr,0,0,1);Module[\"establishStackSpace\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module[\"executeNotifiedProxyingQueue\"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"keepRuntimeAlive\"]()){}else{Module[\"__emscripten_thread_exit\"](ex.status)}}else{throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"__emscripten_thread_exit\"](-1)}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processProxyingQueue\"){if(initializedJS){Module[\"executeNotifiedProxyingQueue\"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){if(Module[\"__emscripten_thread_crashed\"]){Module[\"__emscripten_thread_crashed\"]()}throw ex}};`;", "\nvar WasmBackendModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!=\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _abort(){abort(\"\")}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _fd_close(fd){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2];var len=HEAPU32[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer>>>0)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var asmLibraryArg={\"abort\":_abort,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Acos=Module[\"_Acos\"]=function(){return(_Acos=Module[\"_Acos\"]=Module[\"asm\"][\"Acos\"]).apply(null,arguments)};var _Acosh=Module[\"_Acosh\"]=function(){return(_Acosh=Module[\"_Acosh\"]=Module[\"asm\"][\"Acosh\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _ArgMin=Module[\"_ArgMin\"]=function(){return(_ArgMin=Module[\"_ArgMin\"]=Module[\"asm\"][\"ArgMin\"]).apply(null,arguments)};var _Asin=Module[\"_Asin\"]=function(){return(_Asin=Module[\"_Asin\"]=Module[\"asm\"][\"Asin\"]).apply(null,arguments)};var _Asinh=Module[\"_Asinh\"]=function(){return(_Asinh=Module[\"_Asinh\"]=Module[\"asm\"][\"Asinh\"]).apply(null,arguments)};var _Atan=Module[\"_Atan\"]=function(){return(_Atan=Module[\"_Atan\"]=Module[\"asm\"][\"Atan\"]).apply(null,arguments)};var _Atan2=Module[\"_Atan2\"]=function(){return(_Atan2=Module[\"_Atan2\"]=Module[\"asm\"][\"Atan2\"]).apply(null,arguments)};var _Atanh=Module[\"_Atanh\"]=function(){return(_Atanh=Module[\"_Atanh\"]=Module[\"asm\"][\"Atanh\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _AvgPool3D=Module[\"_AvgPool3D\"]=function(){return(_AvgPool3D=Module[\"_AvgPool3D\"]=Module[\"asm\"][\"AvgPool3D\"]).apply(null,arguments)};var _AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=function(){return(_AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=Module[\"asm\"][\"AvgPool3DGrad\"]).apply(null,arguments)};var _AvgPoolGrad=Module[\"_AvgPoolGrad\"]=function(){return(_AvgPoolGrad=Module[\"_AvgPoolGrad\"]=Module[\"asm\"][\"AvgPoolGrad\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Bincount=Module[\"_Bincount\"]=function(){return(_Bincount=Module[\"_Bincount\"]=Module[\"asm\"][\"Bincount\"]).apply(null,arguments)};var _BitwiseAnd=Module[\"_BitwiseAnd\"]=function(){return(_BitwiseAnd=Module[\"_BitwiseAnd\"]=Module[\"asm\"][\"BitwiseAnd\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Conv3D=Module[\"_Conv3D\"]=function(){return(_Conv3D=Module[\"_Conv3D\"]=Module[\"asm\"][\"Conv3D\"]).apply(null,arguments)};var _Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=function(){return(_Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=Module[\"asm\"][\"Conv3DBackpropFilterV2\"]).apply(null,arguments)};var _Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=function(){return(_Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=Module[\"asm\"][\"Conv3DBackpropInputV2\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DenseBincount=Module[\"_DenseBincount\"]=function(){return(_DenseBincount=Module[\"_DenseBincount\"]=Module[\"asm\"][\"DenseBincount\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Diag=Module[\"_Diag\"]=function(){return(_Diag=Module[\"_Diag\"]=Module[\"asm\"][\"Diag\"]).apply(null,arguments)};var _Dilation2D=Module[\"_Dilation2D\"]=function(){return(_Dilation2D=Module[\"_Dilation2D\"]=Module[\"asm\"][\"Dilation2D\"]).apply(null,arguments)};var _Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=function(){return(_Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=Module[\"asm\"][\"Dilation2DBackpropFilter\"]).apply(null,arguments)};var _Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=function(){return(_Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=Module[\"asm\"][\"Dilation2DBackpropInput\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _EluGrad=Module[\"_EluGrad\"]=function(){return(_EluGrad=Module[\"_EluGrad\"]=Module[\"asm\"][\"EluGrad\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Erf=Module[\"_Erf\"]=function(){return(_Erf=Module[\"_Erf\"]=Module[\"asm\"][\"Erf\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _Expm1=Module[\"_Expm1\"]=function(){return(_Expm1=Module[\"_Expm1\"]=Module[\"asm\"][\"Expm1\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _IsFinite=Module[\"_IsFinite\"]=function(){return(_IsFinite=Module[\"_IsFinite\"]=Module[\"asm\"][\"IsFinite\"]).apply(null,arguments)};var _IsInf=Module[\"_IsInf\"]=function(){return(_IsInf=Module[\"_IsInf\"]=Module[\"asm\"][\"IsInf\"]).apply(null,arguments)};var _IsNan=Module[\"_IsNan\"]=function(){return(_IsNan=Module[\"_IsNan\"]=Module[\"asm\"][\"IsNan\"]).apply(null,arguments)};var _LRN=Module[\"_LRN\"]=function(){return(_LRN=Module[\"_LRN\"]=Module[\"asm\"][\"LRN\"]).apply(null,arguments)};var _LRNGrad=Module[\"_LRNGrad\"]=function(){return(_LRNGrad=Module[\"_LRNGrad\"]=Module[\"asm\"][\"LRNGrad\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _LinSpace=Module[\"_LinSpace\"]=function(){return(_LinSpace=Module[\"_LinSpace\"]=Module[\"asm\"][\"LinSpace\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _Log1p=Module[\"_Log1p\"]=function(){return(_Log1p=Module[\"_Log1p\"]=Module[\"asm\"][\"Log1p\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _MaxPool3D=Module[\"_MaxPool3D\"]=function(){return(_MaxPool3D=Module[\"_MaxPool3D\"]=Module[\"asm\"][\"MaxPool3D\"]).apply(null,arguments)};var _MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=function(){return(_MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=Module[\"asm\"][\"MaxPool3DGrad\"]).apply(null,arguments)};var _MaxPoolGrad=Module[\"_MaxPoolGrad\"]=function(){return(_MaxPoolGrad=Module[\"_MaxPoolGrad\"]=Module[\"asm\"][\"MaxPoolGrad\"]).apply(null,arguments)};var _MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=function(){return(_MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=Module[\"asm\"][\"MaxPoolWithArgmax\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Mod=Module[\"_Mod\"]=function(){return(_Mod=Module[\"_Mod\"]=Module[\"asm\"][\"Mod\"]).apply(null,arguments)};var _Multinomial=Module[\"_Multinomial\"]=function(){return(_Multinomial=Module[\"_Multinomial\"]=Module[\"asm\"][\"Multinomial\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Reciprocal=Module[\"_Reciprocal\"]=function(){return(_Reciprocal=Module[\"_Reciprocal\"]=Module[\"asm\"][\"Reciprocal\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=function(){return(_ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=Module[\"asm\"][\"ResizeBilinearGrad\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=function(){return(_ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=Module[\"asm\"][\"ResizeNearestNeighborGrad\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SearchSorted=Module[\"_SearchSorted\"]=function(){return(_SearchSorted=Module[\"_SearchSorted\"]=Module[\"asm\"][\"SearchSorted\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Selu=Module[\"_Selu\"]=function(){return(_Selu=Module[\"_Selu\"]=Module[\"asm\"][\"Selu\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sign=Module[\"_Sign\"]=function(){return(_Sign=Module[\"_Sign\"]=Module[\"asm\"][\"Sign\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Sinh=Module[\"_Sinh\"]=function(){return(_Sinh=Module[\"_Sinh\"]=Module[\"asm\"][\"Sinh\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _Softplus=Module[\"_Softplus\"]=function(){return(_Softplus=Module[\"_Softplus\"]=Module[\"asm\"][\"Softplus\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _SparseToDense=Module[\"_SparseToDense\"]=function(){return(_SparseToDense=Module[\"_SparseToDense\"]=Module[\"asm\"][\"SparseToDense\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=function(){return(_TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=Module[\"asm\"][\"TensorScatterUpdate\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5,\n  elu = 6\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, broadcast_util, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n\n  const out = backend.makeOutput([...batchDims, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createUnaryKernelConfig(\n    kernelName: string, outType?: DataType): KernelConfig {\n  let wasmFunc: (xId: number, dtype: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const acosConfig: KernelConfig = createUnaryKernelConfig(Acos);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const acoshConfig: KernelConfig = createUnaryKernelConfig(Acosh);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    kernelFunc();\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc, tensor} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n\n  if (x.dtype === 'string') {\n    return tensor(backend.readSync(x.dataId), x.shape, x.dtype);\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as unknown as KernelFunc,\n  setupFunc: setup,\n};\n", "/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ArgMaxAttrs, ArgMaxInputs, ArgMinAttrs, ArgMinInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nexport function createArgMinMaxKernelConfig(kernelName: 'ArgMin'|\n                                            'ArgMax'): KernelConfig {\n  let wasmFunc: (\n      xId: number, dtype: number, outerSize: number, innerSize: number,\n      outId: number) => void;\n\n  function setupFunc(backend: BackendWasm) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // outer_size\n      'number',  // inner_size\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {\n    backend: BackendWasm,\n    inputs: ArgMinInputs&ArgMaxInputs,\n    attrs: ArgMinAttrs&ArgMaxAttrs,\n  }): TensorInfo {\n    const {backend, inputs, attrs} = args;\n    const {axis} = attrs;\n    const {x} = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n\n    const {transposed, axes, inputWasTransposed} =\n        permuteAxesAndTranspose(x, axis, backend);\n\n    if (inputWasTransposed) {\n      const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n      if (transposedId !== xId) {\n        // transpose was not a no-op. We will need to dispose of this\n        // once we are done.\n        input = transposed;\n        inputId = transposedId;\n      }\n    }\n\n    const outShape = input.shape.slice(0, -1);\n    const out = backend.makeOutput(outShape, 'int32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const outerSize = util.sizeFromShape(out.shape);\n    const innerSize = input.shape[axes[0]];\n    wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n    if (inputWasTransposed) {\n      // dispose of the transposed tensor.\n      backend.disposeData(transposed.dataId);\n    }\n\n    return out;\n  }\n\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc: kernelFunc as unknown as KernelFunc,\n  };\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createArgMinMaxKernelConfig} from './argminmax_kernel';\n\nexport const argMaxConfig: KernelConfig = createArgMinMaxKernelConfig(ArgMax);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMin, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createArgMinMaxKernelConfig} from './argminmax_kernel';\n\nexport const argMinConfig: KernelConfig = createArgMinMaxKernelConfig(ArgMin);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asin, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const asinConfig: KernelConfig = createUnaryKernelConfig(Asin);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asinh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const asinhConfig: KernelConfig = createUnaryKernelConfig(Asinh);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const atanConfig: KernelConfig = createUnaryKernelConfig(Atan);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan2, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nexport const atan2Config: KernelConfig =\n    createBinaryKernelConfig(Atan2, /*supportsFullBroadcast=*/false);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atanh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const atanhConfig: KernelConfig = createUnaryKernelConfig(Atanh);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3D, AvgPool3DAttrs, AvgPool3DInputs, backend_util, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool3D: (\n    xId: number, outId: number, batchSize: number, channelSize: number,\n    inDepth: number, inHeight: number, inWidth: number, outDepth: number,\n    outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool3D = backend.wasm.cwrap('AvgPool3D', null, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function avgPool3D(args: {\n  inputs: AvgPool3DInputs,\n  attrs: AvgPool3DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode, dataFormat} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad, dimRoundingMode, dataFormat);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n\n  wasmAvgPool3D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const avgPool3DConfig: KernelConfig = {\n  kernelName: AvgPool3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool3D as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3DGrad, AvgPool3DGradAttrs, AvgPool3DGradInputs, backend_util, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool3DGrad: (\n    dyId: number, dxId: number, batchSize: number, channelSize: number,\n    inDepth: number, inHeight: number, inWidth: number, outDepth: number,\n    outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number, filterDepth: number,\n    filterHeight: number, filterWidth: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool3DGrad = backend.wasm.cwrap('AvgPool3DGrad', null, [\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n    'number',  // filterDepth\n    'number',  // filterHeight\n    'number',  // filterWidth\n  ]);\n}\n\nexport function avgPool3DGrad(args: {\n  inputs: AvgPool3DGradInputs,\n  attrs: AvgPool3DGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      input.shape as [number, number, number, number, number], filterSize,\n      strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmAvgPool3DGrad(\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n  );\n  return dx;\n}\n\nexport const avgPool3DGradConfig: KernelConfig = {\n  kernelName: AvgPool3DGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool3DGrad as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPoolGrad, AvgPoolGradAttrs, AvgPoolGradInputs, backend_util, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPoolGrad: (\n    dyId: number, dxId: number, batchSize: number, channelSize: number,\n    inHeight: number, inWidth: number, outHeight: number, outWidth: number,\n    strideHeight: number, strideWidth: number, dilationHeight: number,\n    dilationWidth: number, effectiveFilterHeight: number,\n    effectiveFilterWidth: number, padTop: number, padLeft: number,\n    filterHeight: number, filterWidth: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPoolGrad = backend.wasm.cwrap('AvgPoolGrad', null, [\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padTop\n    'number',  // padLeft\n    'number',  // filterHeight\n    'number',  // filterWidth\n  ]);\n}\n\nexport function avgPoolGrad(args: {\n  inputs: AvgPoolGradInputs,\n  attrs: AvgPoolGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad} = attrs;\n\n  const convInfo = backend_util.computePool2DInfo(\n      input.shape as [number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmAvgPoolGrad(\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool ops (AvgPool and MaxPool) support 2D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n  );\n  return dx;\n}\n\nexport const avgPoolGradConfig: KernelConfig = {\n  kernelName: AvgPoolGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPoolGrad as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, broadcast_util, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nfunction batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: BackendWasm,\n  attrs: BatchToSpaceNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xTransposedReshaped.dataId);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Bincount, BincountAttrs, BincountInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmBincount: (\n    xId: number, size: number, hasWeights: boolean, weightsId: number,\n    weightsDType: CppDType, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBincount = backend.wasm.cwrap(Bincount, null /*void*/, [\n    'number',   // xId\n    'number',   // size\n    'boolean',  // hasWeights\n    'number',   // weightsId\n    'number',   // weightsDType\n    'number',   // outId\n  ]);\n}\n\nfunction bincount(\n    args: {backend: BackendWasm, inputs: BincountInputs, attrs: BincountAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, weights} = inputs;\n  const {size} = attrs;\n\n  const hasWeights = weights.shape.reduce((p, v) => p * v, 1) !== 0;\n  const outShape = x.shape.length === 1 ? [size] : [x.shape[0], size];\n  const out = backend.makeOutput(outShape, weights.dtype);\n\n  function tensorId(x: TensorInfo) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmBincount(\n      tensorId(x), size, hasWeights, tensorId(weights), CppDType[weights.dtype],\n      tensorId(out));\n\n  return out;\n}\n\nexport const bincountConfig: KernelConfig = {\n  kernelName: Bincount,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: bincount as unknown as KernelFunc\n};\n", "\n/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BitwiseAnd, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const bitwiseAndConfig: KernelConfig =\n    createBinaryKernelConfig(BitwiseAnd, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {backend_util, BroadcastArgs, BroadcastArgsInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function broadcastArgs(args: {\n  inputs: BroadcastArgsInputs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend} = args;\n  const {s0, s1} = inputs;\n\n  const s0Vals = backend.typedArrayFromHeap(s0);\n  const s1Vals = backend.typedArrayFromHeap(s1);\n\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(\n      Array.from(s0Vals), Array.from(s1Vals));\n\n  return backend.makeOutput(\n      [broadcastShape.length], 'int32', /*memoryOffset=*/undefined,\n      /*values=*/new Int32Array(broadcastShape));\n}\n\nexport const broadcastArgsConfig: KernelConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'wasm',\n  kernelFunc: broadcastArgs\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  const shapes = inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3D, Conv3DAttrs, Conv3DInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv3D: (\n    xId: number, filterId: number, outId: number, batchSize: number,\n    inDepth: number, inHeight: number, inWidth: number, inChannels: number,\n    outDepth: number, outHeight: number, outWidth: number, outChannels: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    dilationDepth: number, dilationHeight: number, dilationWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv3D = backend.wasm.cwrap(Conv3D, null, [\n    'number',  // xId\n    'number',  // filterId\n    'number',  // outId\n    'number',  // batchSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // filterDepth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function conv3D(args: {\n  inputs: Conv3DInputs,\n  attrs: Conv3DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dilations} = attrs;\n  if (x.dtype !== 'float32') {\n    throw new Error(`Tensor x must have dtype float32, got ${x.dtype}`);\n  }\n  if (filter.dtype !== 'float32') {\n    throw new Error(\n        `Tensor filter must have dtype float32, got ${filter.dtype}`);\n  }\n\n  const convInfo = backend_util.computeConv3DInfo(\n      x.shape as [number, number, number, number, number],\n      filter.shape as [number, number, number, number, number], strides,\n      dilations, pad);\n\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n  wasmConv3D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      convInfo.batchSize,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.inChannels,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.outChannels,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const conv3DConfig: KernelConfig = {\n  kernelName: Conv3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3D as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropFilterV2, Conv3DBackpropFilterV2Attrs, Conv3DBackpropFilterV2Inputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv3DBackpropFilterV2: (\n    xId: number, dyId: number, dwId: number, batchSize: number, inDepth: number,\n    inHeight: number, inWidth: number, inChannels: number, outDepth: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    dilationDepth: number, dilationHeight: number, dilationWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv3DBackpropFilterV2 =\n      backend.wasm.cwrap(Conv3DBackpropFilterV2, null, [\n        'number',  // xId\n        'number',  // dyId\n        'number',  // dwId\n        'number',  // batchSize\n        'number',  // inDepth\n        'number',  // inHeight\n        'number',  // inWidth\n        'number',  // inChannels\n        'number',  // outDepth\n        'number',  // outHeight\n        'number',  // outWidth\n        'number',  // outChannels\n        'number',  // strideDepth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // dilationDepth\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // filterDepth\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padFront\n        'number',  // padTop\n        'number',  // padLeft\n      ]);\n}\n\nexport function conv3DBackpropFilterV2(args: {\n  inputs: Conv3DBackpropFilterV2Inputs,\n  attrs: Conv3DBackpropFilterV2Attrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, pad, filterShape} = attrs;\n\n  if (x.dtype !== 'float32') {\n    throw new Error(`Tensor dy must have dtype float32, got ${x.dtype}`);\n  }\n  if (dy.dtype !== 'float32') {\n    throw new Error(`Tensor filter must have dtype float32, got ${dy.dtype}`);\n  }\n\n  const convInfo = backend_util.computeConv3DInfo(\n      x.shape as [number, number, number, number, number], filterShape, strides,\n      /*dilations=*/1, pad);\n\n  const dw = backend.makeOutput(convInfo.filterShape, dy.dtype);\n\n  wasmConv3DBackpropFilterV2(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dw.dataId).id,\n      convInfo.batchSize,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.inChannels,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.outChannels,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dw;\n}\n\nexport const conv3DBackpropFilterV2Config: KernelConfig = {\n  kernelName: Conv3DBackpropFilterV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3DBackpropFilterV2 as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropInputV2, Conv3DBackpropInputV2Attrs, Conv3DBackpropInputV2Inputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv3DBackpropInputV2: (\n    filterId: number, dyId: number, dxId: number, batchSize: number,\n    inDepth: number, inHeight: number, inWidth: number, inChannels: number,\n    outDepth: number, outHeight: number, outWidth: number, outChannels: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    dilationDepth: number, dilationHeight: number, dilationWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv3DBackpropInputV2 = backend.wasm.cwrap(Conv3DBackpropInputV2, null, [\n    'number',  // filterId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // filterDepth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function conv3DBackpropInputV2(args: {\n  inputs: Conv3DBackpropInputV2Inputs,\n  attrs: Conv3DBackpropInputV2Attrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {pad, strides, inputShape} = attrs;\n  if (dy.dtype !== 'float32') {\n    throw new Error(`Tensor dy must have dtype float32, got ${dy.dtype}`);\n  }\n  if (filter.dtype !== 'float32') {\n    throw new Error(\n        `Tensor filter must have dtype float32, got ${filter.dtype}`);\n  }\n\n  const convInfo = backend_util.computeConv3DInfo(\n      inputShape, filter.shape as [number, number, number, number, number],\n      strides, /*dilations=*/1, pad);\n\n  const dx = backend.makeOutput(convInfo.inShape, dy.dtype);\n\n  wasmConv3DBackpropInputV2(\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.inChannels,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.outChannels,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dx;\n}\n\nexport const conv3DBackpropInputV2Config: KernelConfig = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3DBackpropInputV2 as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const coshConfig: KernelConfig = createUnaryKernelConfig(Cosh);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as unknown as\n                          keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumprod, CumprodAttrs, CumprodInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumprod: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumprod = backend.wasm.cwrap(Cumprod, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumprod(\n  args: {inputs: CumprodInputs, backend: BackendWasm, attrs: CumprodAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumprod does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumprod', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumprod(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n              permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumprodConfig: KernelConfig = {\n  kernelName: Cumprod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumprod as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {DenseBincount, DenseBincountAttrs, DenseBincountInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDenseBincount: (\n    xId: number, xShape: Uint8Array, xShapeLen: number, size: number,\n    hasWeights: boolean, weightsId: number, weightsDType: CppDType,\n    binaryOutput: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDenseBincount = backend.wasm.cwrap('DenseBincount', null /*void*/, [\n    'number',   // xId\n    'array',    // xShape\n    'number',   // xShapeLen\n    'number',   // size\n    'boolean',  // hasWeights\n    'number',   // weightsId\n    'number',   // weightsDType\n    'boolean',  // binaryOutput\n    'number',   // outId\n  ]);\n}\n\nfunction denseBincount(args: {\n  backend: BackendWasm,\n  inputs: DenseBincountInputs,\n  attrs: DenseBincountAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, weights} = inputs;\n  const {size, binaryOutput} = attrs;\n\n  const hasWeights = weights.shape.reduce((p, v) => p * v, 1) !== 0;\n  const outShape = x.shape.length === 1 ? [size] : [x.shape[0], size];\n  const out = backend.makeOutput(outShape, weights.dtype);\n\n  function tensorId(x: TensorInfo) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmDenseBincount(\n      tensorId(x), new Uint8Array(new Int32Array(x.shape).buffer),\n      x.shape.length, size, hasWeights, tensorId(weights),\n      CppDType[weights.dtype], binaryOutput, tensorId(out));\n\n  return out;\n}\n\nexport const denseBincountConfig: KernelConfig = {\n  kernelName: DenseBincount,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: denseBincount as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Diag, DiagInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDiag: (xId: number, xDType: CppDType, xSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDiag = backend.wasm.cwrap('Diag', null, [\n    'number',  // xId\n    'number',  // xDType,\n    'number',  // xSize,\n    'number',  // outId\n  ]);\n}\n\nexport function diag(args: {inputs: DiagInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const out = backend.makeOutput([...x.shape, ...x.shape], x.dtype);\n\n  wasmDiag(\n      backend.dataIdMap.get(x.dataId).id, CppDType[x.dtype], xSize,\n      backend.dataIdMap.get(out.dataId).id);\n  return out;\n}\n\nexport const diagConfig: KernelConfig = {\n  kernelName: Diag,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: diag as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2D, Dilation2DAttrs, Dilation2DInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmDilation2D: (\n    xId: number, filterId: number, outId: number, dtype: number, batch: number,\n    depth: number, inHeight: number, inWidth: number, outHeight: number,\n    outWidth: number, strideHeight: number, strideWidth: number,\n    dilationHeight: number, dilationWidth: number, filterHeight: number,\n    filterWidth: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDilation2D = backend.wasm.cwrap(Dilation2D, null, [\n    'number',  // xId\n    'number',  // filterId\n    'number',  // outId\n    'number',  // dtype\n    'number',  // batch\n    'number',  // depth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function dilation2D(args: {\n  inputs: Dilation2DInputs,\n  attrs: Dilation2DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  if (x.dtype !== filter.dtype) {\n    throw new Error(\n        `Dilation2D error: x must have the same dtype as filter. Got ${\n            x.dtype} and ${filter.dtype}`);\n  }\n\n  const dilationInfo = backend_util.computeDilation2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number], strides, pad,\n      /*dataFormat=*/'NHWC', dilations);\n\n  const out = backend.makeOutput(dilationInfo.outShape, x.dtype);\n\n  wasmDilation2D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      CppDType[x.dtype],\n      dilationInfo.batchSize,\n      /*depth=*/dilationInfo.inChannels,\n      dilationInfo.inHeight,\n      dilationInfo.inWidth,\n      dilationInfo.outHeight,\n      dilationInfo.outWidth,\n      dilationInfo.strideHeight,\n      dilationInfo.strideWidth,\n      dilationInfo.dilationHeight,\n      dilationInfo.dilationWidth,\n      dilationInfo.filterHeight,\n      dilationInfo.filterWidth,\n      dilationInfo.padInfo.top,\n      dilationInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const dilation2DConfig: KernelConfig = {\n  kernelName: Dilation2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2D as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2DAttrs, Dilation2DBackpropFilter, KernelConfig, KernelFunc, Tensor3D, Tensor4D, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDilation2DBackpropFilter: (\n    xId: number, filterId: number, dyId: number, gradId: number, dtype: number,\n    batch: number, depth: number, inHeight: number, inWidth: number,\n    outHeight: number, outWidth: number, strideHeight: number,\n    strideWidth: number, dilationHeight: number, dilationWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number,\n    padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDilation2DBackpropFilter =\n      backend.wasm.cwrap(Dilation2DBackpropFilter, null, [\n        'number',  // xId\n        'number',  // filterId\n        'number',  // dyId\n        'number',  // gradId\n        'number',  // dtype\n        'number',  // batch\n        'number',  // depth\n        'number',  // inHeight\n        'number',  // inWidth\n        'number',  // outHeight\n        'number',  // outWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padLeft\n      ]);\n}\n\nexport function dilation2DBackpropFilter(args: {\n  inputs: {x: Tensor4D, filter: Tensor3D, dy: Tensor4D},\n  attrs: Dilation2DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter, dy} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  if (x.dtype !== filter.dtype || x.dtype !== dy.dtype) {\n    throw new Error(\n        `Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${\n            x.dtype}, ${filter.dtype}, and ${dy.dtype}`);\n  }\n\n  const dilationInfo = backend_util.computeDilation2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number], strides, pad,\n      /*dataFormat=*/'NHWC', dilations);\n\n  const gradients = backend.makeOutput(filter.shape, filter.dtype);\n\n  wasmDilation2DBackpropFilter(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(gradients.dataId).id,\n      CppDType[x.dtype],\n      dilationInfo.batchSize,\n      /*depth=*/dilationInfo.inChannels,\n      dilationInfo.inHeight,\n      dilationInfo.inWidth,\n      dilationInfo.outHeight,\n      dilationInfo.outWidth,\n      dilationInfo.strideHeight,\n      dilationInfo.strideWidth,\n      dilationInfo.dilationHeight,\n      dilationInfo.dilationWidth,\n      dilationInfo.filterHeight,\n      dilationInfo.filterWidth,\n      dilationInfo.padInfo.top,\n      dilationInfo.padInfo.left,\n  );\n  return gradients;\n}\n\nexport const dilation2DBackpropFilterConfig: KernelConfig = {\n  kernelName: Dilation2DBackpropFilter,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2DBackpropFilter as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2DAttrs, Dilation2DBackpropInput, KernelConfig, KernelFunc, Tensor3D, Tensor4D, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDilation2DBackpropInput: (\n    xId: number, filterId: number, dyId: number, gradId: number, dtype: number,\n    batch: number, depth: number, inHeight: number, inWidth: number,\n    outHeight: number, outWidth: number, strideHeight: number,\n    strideWidth: number, dilationHeight: number, dilationWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number,\n    padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDilation2DBackpropInput =\n      backend.wasm.cwrap(Dilation2DBackpropInput, null, [\n        'number',  // xId\n        'number',  // filterId\n        'number',  // dyId\n        'number',  // gradId\n        'number',  // dtype\n        'number',  // batch\n        'number',  // depth\n        'number',  // inHeight\n        'number',  // inWidth\n        'number',  // outHeight\n        'number',  // outWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padLeft\n      ]);\n}\n\nexport function dilation2DBackpropInput(args: {\n  inputs: {x: Tensor4D, filter: Tensor3D, dy: Tensor4D},\n  attrs: Dilation2DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter, dy} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  if (x.dtype !== filter.dtype || x.dtype !== dy.dtype) {\n    throw new Error(\n        `Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${\n            x.dtype}, ${filter.dtype}, and ${dy.dtype}`);\n  }\n\n  const dilationInfo = backend_util.computeDilation2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number], strides, pad,\n      /*dataFormat=*/'NHWC', dilations);\n\n  const gradients = backend.makeOutput(x.shape, x.dtype);\n\n  wasmDilation2DBackpropInput(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(gradients.dataId).id,\n      CppDType[x.dtype],\n      dilationInfo.batchSize,\n      /*depth=*/dilationInfo.inChannels,\n      dilationInfo.inHeight,\n      dilationInfo.inWidth,\n      dilationInfo.outHeight,\n      dilationInfo.outWidth,\n      dilationInfo.strideHeight,\n      dilationInfo.strideWidth,\n      dilationInfo.dilationHeight,\n      dilationInfo.dilationWidth,\n      dilationInfo.filterHeight,\n      dilationInfo.filterWidth,\n      dilationInfo.padInfo.top,\n      dilationInfo.padInfo.left,\n  );\n  return gradients;\n}\n\nexport const dilation2DBackpropInputConfig: KernelConfig = {\n  kernelName: Dilation2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2DBackpropInput as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const eluConfig: KernelConfig = createUnaryKernelConfig(Elu);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {EluGrad, EluGradInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmEluGrad: (yId: number, dyId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmEluGrad = backend.wasm.cwrap(EluGrad, null, [\n    'number',  // yId\n    'number',  // dyId,\n    'number',  // outId\n  ]);\n}\n\nexport function eluGrad(args: {inputs: EluGradInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {dy, y} = inputs;\n\n  const out = backend.makeOutput(y.shape, 'float32');\n  const tensorId = (x: TensorInfo) => {\n    return backend.dataIdMap.get(x.dataId).id!;\n  };\n  wasmEluGrad(tensorId(y), tensorId(dy), tensorId(out));\n  return out;\n}\n\nexport const eluGradConfig: KernelConfig = {\n  kernelName: EluGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: eluGrad as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Erf, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const erfConfig: KernelConfig = createUnaryKernelConfig(Erf);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp, 'float32');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Expm1, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expm1Config: KernelConfig =\n    createUnaryKernelConfig(Expm1, 'float32');\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value}, backend} = args;\n  let {attrs: {dtype}} = args;\n\n  dtype = dtype || util.inferDtype(value);\n\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as unknown as KernelFunc,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId) as TypedArray;\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(\n        index <= axisDim - 1 && index >= 0,\n        () =>\n            `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsFinite, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isFiniteConfig: KernelConfig =\n    createUnaryKernelConfig(IsFinite, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsInf, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isInfConfig: KernelConfig = createUnaryKernelConfig(IsInf, 'bool');\n", "/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsNan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isNaNConfig: KernelConfig = createUnaryKernelConfig(IsNan, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // leakyrelu_alpha\n    'number',  // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LinSpace, LinSpaceAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmLinSpace: (outId: number, start: number, stop: number, num: number) =>\n    void;\n\nfunction setup(backend: BackendWasm) {\n  wasmLinSpace = backend.wasm.cwrap(LinSpace, null, [\n    'number',  // outId\n    'number',  // start\n    'number',  // stop\n    'number',  // num\n  ]);\n}\n\nexport function linSpace(args: {attrs: LinSpaceAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {attrs, backend} = args;\n  const {start, stop, num} = attrs;\n\n  // TFJS Cpu backend supports num as a float and returns undetermined tensor in\n  // that case. However, according to TensorFlow spec, num should be a integer.\n  const numInt = Math.floor(num);\n\n  const out = backend.makeOutput([numInt], 'float32');\n  wasmLinSpace(backend.dataIdMap.get(out.dataId).id, start, stop, numInt);\n  return out;\n}\n\nexport const linSpaceConfig: KernelConfig = {\n  kernelName: LinSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: linSpace as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Log1p} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const log1pConfig: KernelConfig = createUnaryKernelConfig(Log1p);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalNot} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const logicalNotConfig: KernelConfig =\n  createUnaryKernelConfig(LogicalNot);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalOr} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalOrConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalOr, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalXor} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalXorConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalXor, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRN, LRNAttrs, LRNInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmLRN: (\n    xId: number, outId: number, channels: number, depthRadius: number,\n    bias: number, alpha: number, beta: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmLRN = backend.wasm.cwrap(LRN, null, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number',  // depthRadius\n    'number',  // bias\n    'number',  // alpha\n    'number',  // beta\n  ]);\n}\n\nexport function lrn(args: {\n  inputs: LRNInputs,\n  attrs: LRNAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  if (x.dtype !== 'float32') {\n    throw new Error('LRN error: x must have dtype float32');\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n\n  wasmLRN(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      /*channels=*/x.shape[3],\n      depthRadius,\n      bias,\n      alpha,\n      beta,\n  );\n  return out;\n}\n\nexport const lrnConfig: KernelConfig = {\n  kernelName: LRN,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: lrn as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRNGrad, LRNGradAttrs, LRNGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmLRNGrad: (\n    xId: number, yId: number, dyId: number, dxId: number, channels: number,\n    depthRadius: number, bias: number, alpha: number, beta: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmLRNGrad = backend.wasm.cwrap(LRNGrad, null, [\n    'number',  // xId\n    'number',  // yId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // channels\n    'number',  // depthRadius\n    'number',  // bias\n    'number',  // alpha\n    'number',  // beta\n  ]);\n}\n\nexport function lrnGrad(args: {\n  inputs: LRNGradInputs,\n  attrs: LRNGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, y, dy} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  if (x.dtype !== 'float32' || y.dtype !== 'float32' ||\n      dy.dtype !== 'float32') {\n    throw new Error('LRNGrad error: x, y, and dy must have dtype float32');\n  }\n\n  const dx = backend.makeOutput(x.shape, x.dtype);\n\n  wasmLRNGrad(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(y.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      /*channels=*/dy.shape[3],\n      depthRadius,\n      bias,\n      alpha,\n      beta,\n  );\n  return dx;\n}\n\nexport const lrnGradConfig: KernelConfig = {\n  kernelName: LRNGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: lrnGrad as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMax: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(\n      x.dtype === 'float32',\n      () =>\n          `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool3D, MaxPool3DAttrs, MaxPool3DInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool3D: (\n    xId: number, outId: number, batchSize: number, channelSize: number,\n    inDepth: number, inHeight: number, inWidth: number, outDepth: number,\n    outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool3D = backend.wasm.cwrap('MaxPool3D', null, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function maxPool3D(args: {\n  inputs: MaxPool3DInputs,\n  attrs: MaxPool3DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode, dataFormat} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad, dimRoundingMode, dataFormat);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n\n  wasmMaxPool3D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const maxPool3DConfig: KernelConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool3D as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool3DGrad, MaxPool3DGradAttrs, MaxPool3DGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool3DGrad: (\n    xId: number, dyId: number, dxId: number, batchSize: number,\n    channelSize: number, inDepth: number, inHeight: number, inWidth: number,\n    outDepth: number, outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool3DGrad = backend.wasm.cwrap('MaxPool3DGrad', null, [\n    'number',  // xId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function maxPool3DGrad(args: {\n  inputs: MaxPool3DGradInputs,\n  attrs: MaxPool3DGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      input.shape as [number, number, number, number, number], filterSize,\n      strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmMaxPool3DGrad(\n      backend.dataIdMap.get(input.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (MaxPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dx;\n}\n\nexport const maxPool3DGradConfig: KernelConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool3DGrad as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPoolGrad, MaxPoolGradAttrs, MaxPoolGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPoolGrad: (\n    xId: number, dyId: number, dxId: number, batchSize: number,\n    channelSize: number, inHeight: number, inWidth: number, outHeight: number,\n    outWidth: number, strideHeight: number, strideWidth: number,\n    dilationHeight: number, dilationWidth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number, padTop: number,\n    padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPoolGrad = backend.wasm.cwrap('MaxPoolGrad', null, [\n    'number',  // xId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function maxPoolGrad(args: {\n  inputs: MaxPoolGradInputs,\n  attrs: MaxPoolGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool2DInfo(\n      input.shape as [number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmMaxPoolGrad(\n      backend.dataIdMap.get(input.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool ops (MaxPool and MaxPool) support 2D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dx;\n}\n\nexport const maxPoolGradConfig: KernelConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPoolGrad as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPoolWithArgmax, MaxPoolWithArgmaxAttrs, MaxPoolWithArgmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmMaxPoolWithArgmax: (\n    xId: number, pooledId: number, indexesId: number, dtype: number,\n    includeBatchIndex: boolean, batchSize: number, channelSize: number,\n    inHeight: number, inWidth: number, outHeight: number, outWidth: number,\n    strideHeight: number, strideWidth: number, dilationHeight: number,\n    dilationWidth: number, effectiveFilterHeight: number,\n    effectiveFilterWidth: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPoolWithArgmax = backend.wasm.cwrap('MaxPoolWithArgmax', null, [\n    'number',   // xId\n    'number',   // pooledId\n    'number',   // indexesId\n    'number',   // dtype\n    'boolean',  // includeBatchIndex\n    'number',   // batchSize\n    'number',   // channelSize\n    'number',   // inHeight\n    'number',   // inWidth\n    'number',   // outHeight\n    'number',   // outWidth\n    'number',   // strideHeight\n    'number',   // strideWidth\n    'number',   // dilationHeight\n    'number',   // dilationWidth\n    'number',   // effectiveFilterHeight\n    'number',   // effectiveFilterWidth\n    'number',   // padTop\n    'number',   // padLeft\n  ]);\n}\n\nexport function maxPoolWithArgmax(args: {\n  inputs: MaxPoolWithArgmaxInputs,\n  attrs: MaxPoolWithArgmaxAttrs,\n  backend: BackendWasm,\n}): TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, includeBatchInIndex} = attrs;\n\n  util.assert(\n      x.shape.length === 4,\n      () => `Error in maxPool: input must be rank 4 but got rank ${\n          x.shape.length}.`);\n  const dilations: [number, number] = [1, 1];\n  util.assert(\n      backend_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape as [number, number, number, number], filterSize, strides, [1, 1],\n      pad);\n\n  const pooled = backend.makeOutput(convInfo.outShape, x.dtype);\n  const indexes = backend.makeOutput(convInfo.outShape, 'int32');\n\n  wasmMaxPoolWithArgmax(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(pooled.dataId).id,\n      backend.dataIdMap.get(indexes.dataId).id,\n      CppDType[x.dtype],\n      includeBatchInIndex,\n      convInfo.batchSize,\n      convInfo.inChannels,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return [pooled, indexes];\n}\n\nexport const maxPoolWithArgmaxConfig: KernelConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPoolWithArgmax as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMin: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as unknown as KernelFunc,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nexport function softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Multinomial, MultinomialAttrs, MultinomialInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {softmax} from './Softmax';\n\nlet wasmMultinomial: (\n    probabilitiesId: number, batchSize: number, numEvents: number,\n    numSamples: number, seed: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMultinomial = backend.wasm.cwrap(Multinomial, null, [\n    'number',  // probabilitiesId\n    'number',  // batchSize\n    'number',  // numEvents\n    'number',  // numSamples\n    'number',  // seed\n    'number',  // outId\n  ]);\n}\n\nexport function multinomial(args: {\n  inputs: MultinomialInputs,\n  attrs: MultinomialAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {logits} = inputs;\n  const {numSamples, seed, normalized} = attrs;\n\n  if (logits.dtype !== 'float32') {\n    throw new Error(\n        `Tensor logits must have dtype float32, got ${logits.dtype}`);\n  }\n\n  const probabilities = normalized ? logits : softmax({\n    inputs: {logits},\n    backend,\n    attrs: {dim: logits.shape.length - 1},\n  });\n\n  const [batchSize, numEvents] = probabilities.shape;\n  const out = backend.makeOutput([batchSize, numSamples], 'int32');\n\n  wasmMultinomial(\n      backend.dataIdMap.get(probabilities.dataId).id,\n      batchSize,\n      numEvents,\n      numSamples,\n      seed,\n      backend.dataIdMap.get(out.dataId).id,\n  );\n  if (!normalized) {\n    backend.disposeData(probabilities.dataId);\n  }\n  return out;\n}\n\nexport const multinomialConfig: KernelConfig = {\n  kernelName: Multinomial,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: multinomial as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Mod} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nexport const modConfig: KernelConfig =\n    createBinaryKernelConfig(Mod, /*supportsFullBroadcast=*/true);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {dtype, depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {fill} from './Fill';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {shape: outShape, value: constantValue, dtype: x.dtype}\n    });\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as unknown as KernelFunc,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Reciprocal} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reciprocalConfig: KernelConfig =\n    createUnaryKernelConfig(Reciprocal);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinearGrad, ResizeBilinearGradAttrs, ResizeBilinearGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinearGrad: (\n    imagesId: number, dyId: number, dxId: number, imagesShape: Uint8Array,\n    dyShape: Uint8Array, alignCorners: boolean) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinearGrad = backend.wasm.cwrap(\n      ResizeBilinearGrad, null /*void*/,\n      [\n        'number',   // imagesId\n        'number',   // dyId\n        'number',   // dxId\n        'array',    // imagesShape\n        'array',    // dyShape\n        'boolean',  // alignCorners\n      ]);\n}\n\nfunction resizeBilinearGrad(args: {\n  backend: BackendWasm; inputs: ResizeBilinearGradInputs;\n  attrs: ResizeBilinearGradAttrs;\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images, dy} = inputs;\n  const {alignCorners} = attrs;\n\n  const dx = backend.makeOutput(images.shape, 'float32');\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {x: images},\n      attrs: {dtype: 'float32'},\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  wasmResizeBilinearGrad(\n      backend.dataIdMap.get(images.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      new Uint8Array(new Int32Array(images.shape).buffer),\n      new Uint8Array(new Int32Array(dy.shape).buffer),\n      alignCorners,\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return dx;\n}\n\nexport const resizeBilinearGradConfig: KernelConfig = {\n  kernelName: ResizeBilinearGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinearGrad as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {\n  KernelConfig,\n  KernelFunc,\n  ResizeNearestNeighbor,\n  ResizeNearestNeighborAttrs,\n  ResizeNearestNeighborInputs,\n  TensorInfo,\n  util,\n} from '@tensorflow/tfjs-core';\n\nimport { BackendWasm } from '../backend_wasm';\n\nimport { cast } from './Cast';\n\nlet wasmResizeNearestNeighbor: (\n  xId: number,\n  batch: number,\n  oldHeight: number,\n  oldWidth: number,\n  numChannels: number,\n  newHeight: number,\n  newWidth: number,\n  alignCorners: number,\n  halfPixelCenters: number,\n  outId: number\n) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeNearestNeighbor = backend.wasm.cwrap(\n    ResizeNearestNeighbor,\n    null /*void*/,\n    [\n      'number', // xId\n      'number', // batch\n      'number', // oldHeight\n      'number', // oldWidth\n      'number', // numChannels\n      'number', // newHeight\n      'number', // newWidth\n      'number', // alignCorners\n      'number', // halfPixelCenters\n      'number', // outId\n    ]\n  );\n}\n\nfunction resizeNearestNeighbor(args: {\n  backend: BackendWasm;\n  inputs: ResizeNearestNeighborInputs;\n  attrs: ResizeNearestNeighborAttrs;\n}): TensorInfo {\n  const { backend, inputs, attrs } = args;\n  const { images } = inputs;\n  const { alignCorners, halfPixelCenters, size } = attrs;\n\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: { x: images },\n      attrs: { dtype: 'float32' },\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const xId = xData.id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeNearestNeighbor(\n    xId,\n    batch,\n    oldHeight,\n    oldWidth,\n    numChannels,\n    newHeight,\n    newWidth,\n    alignCorners ? 1 : 0,\n    halfPixelCenters ? 1 : 0,\n    outId\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeNearestNeighborConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighbor as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeNearestNeighborGrad, ResizeNearestNeighborGradAttrs, ResizeNearestNeighborGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeNearestNeighborGrad: (\n    imagesId: number, dyId: number, dxId: number, imagesShape: Uint8Array,\n    dyShape: Uint8Array, alignCorners: boolean) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeNearestNeighborGrad = backend.wasm.cwrap(\n      ResizeNearestNeighborGrad, null /*void*/,\n      [\n        'number',   // imagesId\n        'number',   // dyId\n        'number',   // dxId\n        'array',    // imagesShape\n        'array',    // dyShape\n        'boolean',  // alignCorners\n      ]);\n}\n\nfunction resizeNearestNeighborGrad(args: {\n  backend: BackendWasm; inputs: ResizeNearestNeighborGradInputs;\n  attrs: ResizeNearestNeighborGradAttrs;\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images, dy} = inputs;\n  const {alignCorners} = attrs;\n\n  const dx = backend.makeOutput(images.shape, 'float32');\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {x: images},\n      attrs: {dtype: 'float32'},\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  wasmResizeNearestNeighborGrad(\n      backend.dataIdMap.get(images.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      new Uint8Array(new Int32Array(images.shape).buffer),\n      new Uint8Array(new Int32Array(dy.shape).buffer),\n      alignCorners,\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return dx;\n}\n\nexport const resizeNearestNeighborGradConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighborGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighborGrad as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as unknown as KernelFunc,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as unknown as KernelFunc,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SearchSorted, SearchSortedAttrs, SearchSortedInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmSearchSorted: (\n    sortedSequenceId: number, valuesId: number, batchSize: number,\n    sequenceSize: number, valuesSize: number, dtype: number,\n    isSideLeft: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSearchSorted = backend.wasm.cwrap(SearchSorted, null /* void */, [\n    'number',  // sortedSequenceId\n    'number',  // valuesId\n    'number',  // batchSize\n    'number',  // sequenceSize\n    'number',  // valuesSize\n    'number',  // dtype\n    'bool',    // isSideLeft\n    'number',  // outId\n  ]);\n}\n\nfunction searchSorted(args: {\n  inputs: SearchSortedInputs,\n  backend: BackendWasm,\n  attrs: SearchSortedAttrs,\n}) {\n  const {inputs, backend, attrs} = args;\n  const {sortedSequence, values} = inputs;\n  const {side} = attrs;\n\n  if (sortedSequence.dtype !== values.dtype) {\n    throw new Error(\n        `SearchSorted error: sorted_sequence must have the same dtype as values. Got ${\n            sortedSequence.dtype} and ${values.dtype}`);\n  }\n\n  const out = backend.makeOutput(values.shape, 'int32');\n\n  function tensorId(x: TensorInfo) {\n    return backend.dataIdMap.get(x.dataId).id!;\n  }\n  wasmSearchSorted(\n      tensorId(sortedSequence),\n      tensorId(values),\n      /*batchSize=*/sortedSequence.shape[0],\n      /*sequenceSize=*/sortedSequence.shape[1],\n      /*valuesSize=*/values.shape[1],\n      /*dtype=*/CppDType[sortedSequence.dtype],\n      /*isSideLeft=*/side === 'left',\n      tensorId(out),\n  );\n\n  return out;\n}\n\nexport const searchSortedConfig: KernelConfig = {\n  kernelName: SearchSorted,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: searchSorted as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as unknown as KernelFunc,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Selu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const seluConfig: KernelConfig = createUnaryKernelConfig(Selu);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sign} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const signConfig: KernelConfig = createUnaryKernelConfig(Sign);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sinh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const sinhConfig: KernelConfig = createUnaryKernelConfig(Sinh);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Softplus} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const softplusConfig: KernelConfig = createUnaryKernelConfig(Softplus);\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nfunction spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: BackendWasm,\n  attrs: SpaceToBatchNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseFillEmptyRows, SparseFillEmptyRowsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\nimport {CppDType} from './types';\n\nlet wasmSparseFillEmptyRows: (\n    indicesId: number, valuesId: number, valuesDType: number,\n    indicesCount: number, denseRows: number, rank: number,\n    defaultValueId: number, outputIndicesId: number, outputValuesId: number,\n    emptyRowIndicatorId: number, reverseIndexMapId: number,\n    exceptionValuesId: number) => number;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseFillEmptyRows =\n      backend.wasm.cwrap('SparseFillEmptyRows', 'number', [\n        'number',  // indicesId\n        'number',  // valuesId\n        'number',  // valuesDType\n        'number',  // indicesCount\n        'number',  // denseRows\n        'number',  // rank\n        'number',  // defaultValueId\n        'number',  // outputIndicesId\n        'number',  // outputValuesId\n        'number',  // emptyRowIndicatorId\n        'number',  // reverseIndexMapId\n        'number',  // exceptionValuesId\n      ]);\n}\n\nexport function sparseFillEmptyRows(args: {\n  backend: BackendWasm,\n  inputs: SparseFillEmptyRowsInputs,\n}): [TensorInfo, TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {indices, values, denseShape, defaultValue} = inputs;\n\n  const indicesCount = indices.shape[0];\n  const rank = indices.shape[1];\n  const denseRows = backend.readSync(denseShape.dataId)[0] as number;\n\n  // Set output size to maximum possible and resize later (actual result\n  // might be smaller).\n  const maxOutputIndicesShape = [indicesCount + denseRows, rank];\n\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const valuesId = backend.dataIdMap.get(values.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const outputIndices =\n      backend.makeOutput(maxOutputIndicesShape, indices.dtype);\n  const outputIndicesId = backend.dataIdMap.get(outputIndices.dataId).id;\n\n  const outputValues =\n      backend.makeOutput(maxOutputIndicesShape.slice(0, 1), values.dtype);\n  const outputValuesId = backend.dataIdMap.get(outputValues.dataId).id;\n\n  const emptyRowIndicator = backend.makeOutput([denseRows], 'bool');\n  const emptyRowIndicatorId =\n      backend.dataIdMap.get(emptyRowIndicator.dataId).id;\n\n  const reverseIndexMap = backend.makeOutput([indicesCount], indices.dtype);\n  const reverseIndexMapId = backend.dataIdMap.get(reverseIndexMap.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  const outputRows = wasmSparseFillEmptyRows(\n      indicesId, valuesId, CppDType[values.dtype], indicesCount, denseRows,\n      rank, defaultValueId, outputIndicesId, outputValuesId,\n      emptyRowIndicatorId, reverseIndexMapId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(\n              exceptionValuesArray[1]);\n      break;\n    }\n    case 2: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n    backend.disposeData(emptyRowIndicator.dataId);\n    backend.disposeData(reverseIndexMap.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  let resizedIndices = outputIndices;\n  let resizedValues = outputValues;\n  // Overestimated output size.\n  if (outputRows !== maxOutputIndicesShape[0]) {\n    resizedIndices = slice({\n      inputs: {x: outputIndices},\n      attrs: {begin: 0, size: [outputRows, rank]},\n      backend\n    });\n    resizedValues = slice({\n      inputs: {x: outputValues},\n      attrs: {begin: 0, size: outputRows},\n      backend\n    });\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n  }\n\n  return [resizedIndices, resizedValues, emptyRowIndicator, reverseIndexMap];\n}\n\nexport const sparseFillEmptyRowsConfig: KernelConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseFillEmptyRows as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseReshape, SparseReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSparseReshape: (\n    inputIndicesId: number, inputShapeId: number, newShapeId: number,\n    nnz: number, newIndicesId: number, outputShapeId: number,\n    exceptionValuesId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseReshape = backend.wasm.cwrap(SparseReshape, null /*void*/, [\n    'number',  // inputIndicesId\n    'number',  // inputShapeId\n    'number',  // newShapeId\n    'number',  // nnz\n    'number',  // newIndicesId\n    'number',  // outputShapeId\n    'number',  // exceptionValuesId\n  ]);\n}\n\nfunction sparseReshape(args: {\n  backend: BackendWasm,\n  inputs: SparseReshapeInputs,\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {inputIndices, inputShape, newShape} = inputs;\n\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n  if (newShape.shape.length !== 1) {\n    throw new Error(\n        `Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n\n  const inputIndicesId = backend.dataIdMap.get(inputIndices.dataId).id;\n  const inputShapeId = backend.dataIdMap.get(inputShape.dataId).id;\n  const newShapeId = backend.dataIdMap.get(newShape.dataId).id;\n\n  const nnz = inputIndices.shape[0];\n  const outputRank = util.sizeFromShape(newShape.shape);\n\n  const newIndices = backend.makeOutput([nnz, outputRank], inputIndices.dtype);\n  const newIndicesId = backend.dataIdMap.get(newIndices.dataId).id;\n\n  const outputShape = backend.makeOutput([outputRank], newShape.dtype);\n  const outputShapeId = backend.dataIdMap.get(outputShape.dataId).id;\n\n  const exceptionValues = backend.makeOutput([3], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseReshape(\n      inputIndicesId, inputShapeId, newShapeId, nnz, newIndicesId,\n      outputShapeId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseReshapeNegativeOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();\n      break;\n    case 3: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMultipleErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    case 4: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMismatchErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(newIndices.dataId);\n    backend.disposeData(outputShape.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return [newIndices, outputShape];\n}\n\nexport const sparseReshapeConfig: KernelConfig = {\n  kernelName: SparseReshape,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseReshape as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SparseSegmentMeanInputs, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseSegmentReduction: (\n    dataId: number, dtype: number, numRow: number, indicesId: number,\n    segmentIdsId: number, outputId: number, exceptionValuesId: number,\n    isMean: boolean, defaultValue: number) => void;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseSegmentReduction =\n      backend.wasm.cwrap('SparseSegmentReduction', null /*void*/, [\n        'number',  // dataId\n        'number',  // dtype\n        'number',  // numRow\n        'number',  // indicesId\n        'number',  // segmentIdsId\n        'number',  // outputId\n        'number',  // exceptionValuesId,\n        'number',  // isMean\n        'number',  // defaultValue\n      ]);\n}\n\nexport function sparseSegmentReduction(\n    args: {\n      backend: BackendWasm,\n      inputs: SparseSegmentSumInputs|SparseSegmentMeanInputs,\n    },\n    isMean: boolean): TensorInfo {\n  const {backend, inputs} = args;\n  const {data, indices, segmentIds} = inputs;\n\n  const numIndices = indices.shape[0];\n  const segmentIdsBack =\n      (backend.readSync(segmentIds.dataId, numIndices - 1, numIndices) as\n       Int32Array)[0];\n  const lastSegmentIdPlusOne = numIndices > 0 ? segmentIdsBack + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n\n  if (outputRows < 0) {\n    throw (new Error(\n        backend_util\n            .getSparseSegmentReductionNegativeSegmentIdsErrorMessage()));\n  }\n\n  const outputShape = data.shape.slice();\n  outputShape[0] = outputRows;\n\n  const dataId = backend.dataIdMap.get(data.dataId).id;\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const segmentIdsId = backend.dataIdMap.get(segmentIds.dataId).id;\n\n  const output = backend.makeOutput(outputShape, data.dtype);\n  const outputId = backend.dataIdMap.get(output.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseSegmentReduction(\n      dataId, CppDType[data.dtype], data.shape[0], indicesId, segmentIdsId,\n      outputId, exceptionValuesId, isMean, 0);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNegativeSegmentIdsErrorMessage();\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(output.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return output;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentMean, SparseSegmentMeanInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentMean(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentMeanInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, true);\n}\n\nexport const sparseSegmentMeanConfig: KernelConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentMean as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentSum, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentSum(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentSumInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, false);\n}\n\nexport const sparseSegmentSumConfig: KernelConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentSum as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseToDense, SparseToDenseAttrs, SparseToDenseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseToDense: (\n    sparseIndicesId: number, sparseValuesId: number, sparseValuesRank: number,\n    defaultValueId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseToDense = backend.wasm.cwrap(SparseToDense, null /*void*/, [\n    'number',  // sparseIndicesId\n    'number',  // sparseValuesId\n    'number',  // sparseValuesRank\n    'number',  // defaultValueId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number',  // outId\n  ]);\n}\n\nfunction sparseToDense(args: {\n  backend: BackendWasm,\n  inputs: SparseToDenseInputs,\n  attrs: SparseToDenseAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {sparseIndices, sparseValues, defaultValue} = inputs;\n  const {outputShape} = attrs;\n\n  const out = backend.makeOutput(outputShape, defaultValue.dtype);\n  if (util.sizeFromShape(outputShape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n\n  const sparseIndicesId = backend.dataIdMap.get(sparseIndices.dataId).id;\n  const sparseValuesId = backend.dataIdMap.get(sparseValues.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmSparseToDense(\n      sparseIndicesId, sparseValuesId, sparseValues.shape.length,\n      defaultValueId, CppDType[defaultValue.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const sparseToDenseConfig: KernelConfig = {\n  kernelName: SparseToDense,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseToDense as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  let result;\n\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({inputs: {x}, backend, attrs: {shape: finalShape}});\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(\n        x.shape.length >= 1,\n        () => `Input must have rank at least 1, got: ${x.shape.length}`);\n\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({inputs: {x}, backend, attrs: {begin: $begin, size}});\n    result =\n        reshape({inputs: {x: sliced}, backend, attrs: {shape: finalShape}});\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n\n    const outputShapeBytes =\n        new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes,\n        outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n\n    result = reshape({inputs: {x: out}, backend, attrs: {shape: finalShape}});\n\n    backend.disposeData(out.dataId);\n  }\n\n  return result;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringNGrams, StringNGramsAttrs, StringNGramsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringNGramsImplCPU} from '../kernel_utils/shared';\n\nfunction stringNGrams(args: {\n  backend: BackendWasm,\n  inputs: StringNGramsInputs,\n  attrs: StringNGramsAttrs\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {data, dataSplits} = inputs;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences,\n  } = attrs;\n\n  const $data = backend.readSync(data.dataId) as Uint8Array[];\n  const $dataSplits = backend.readSync(dataSplits.dataId) as Int32Array;\n\n  const [nGrams, nGramsSplits] = stringNGramsImplCPU(\n      $data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth,\n      preserveShortSequences);\n\n  const nGramsOut = backend.makeOutput([nGrams.length], 'string');\n  const nGramsOutData = backend.dataIdMap.get(nGramsOut.dataId);\n  nGramsOutData.stringBytes = nGrams;\n\n  const nGramsSplitsOut = backend.makeOutput(dataSplits.shape, 'int32');\n  const nGramsSplitsOutVals = backend.typedArrayFromHeap(nGramsSplitsOut);\n  nGramsSplitsOutVals.set(nGramsSplits);\n\n  return [nGramsOut, nGramsSplitsOut];\n}\n\nexport const stringNGramsConfig: KernelConfig = {\n  kernelName: StringNGrams,\n  backendName: 'wasm',\n  kernelFunc: stringNGrams as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringSplit, StringSplitAttrs, StringSplitInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringSplitImplCPU} from '../kernel_utils/shared';\n\nfunction stringSplit(args: {\n  backend: BackendWasm,\n  inputs: StringSplitInputs,\n  attrs: StringSplitAttrs\n}): [TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {input, delimiter} = inputs;\n  const {skipEmpty} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n  const delimiterVals = backend.readSync(delimiter.dataId) as Uint8Array[];\n\n  const [indices, values, shape] =\n      stringSplitImplCPU(inputVals, delimiterVals[0], skipEmpty);\n  const outputSize = values.length;\n\n  const indicesOut = backend.makeOutput([outputSize, 2], 'int32');\n  const indicesOutVals = backend.typedArrayFromHeap(indicesOut);\n  indicesOutVals.set(indices);\n\n  const valuesOut = backend.makeOutput([outputSize], 'string');\n  const valuesOutData = backend.dataIdMap.get(valuesOut.dataId);\n  valuesOutData.stringBytes = values;\n\n  const shapeOut = backend.makeOutput([2], 'int32');\n  const shapeOutVals = backend.typedArrayFromHeap(shapeOut);\n  shapeOutVals.set(shape);\n\n  return [indicesOut, valuesOut, shapeOut];\n}\n\nexport const stringSplitConfig: KernelConfig = {\n  kernelName: StringSplit,\n  backendName: 'wasm',\n  kernelFunc: stringSplit as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nfunction stringToHashBucketFast(args: {\n  backend: BackendWasm,\n  inputs: StringToHashBucketFastInputs,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {input} = inputs;\n  const {numBuckets} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmSum: (xId: number, reduceSize: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, [\n    'number',  // input_id\n    'number',  // reduce_size\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n", "/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, TensorInfo, TensorScatterUpdate, TensorScatterUpdateAttrs, TensorScatterUpdateInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTensorScatterUpdate: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number, tensorId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTensorScatterUpdate =\n      backend.wasm.cwrap(TensorScatterUpdate, null /*void*/, [\n        'number',  // indicesId\n        'number',  // updatesId\n        'number',  // dtype\n        'number',  // sliceRank\n        'number',  // numUpdates\n        'number',  // sliceSize\n        'array',   // strides\n        'number',  // outputSize\n        'number',  // outId\n        'number',  // tensorId\n      ]);\n}\n\nfunction tensorScatterUpdate(args: {\n  backend: BackendWasm,\n  inputs: TensorScatterUpdateInputs,\n  attrs: TensorScatterUpdateAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {tensor, indices, updates} = inputs;\n  const {} = attrs;\n\n  const out = backend.makeOutput(tensor.shape, tensor.dtype);\n  if (util.sizeFromShape(tensor.shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, tensor.shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const tensorData = backend.dataIdMap.get(tensor.dataId);\n  const tensorId = tensorData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTensorScatterUpdate(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId, tensorId);\n\n  return out;\n}\n\nexport const tensorScatterUpdateConfig: KernelConfig = {\n  kernelName: TensorScatterUpdate,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tensorScatterUpdate as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmTransform: (\n    imageId: number, transformsId: number, isBatchTransform: boolean,\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\n    imageWidth: number, imageHeight: number, inputStrides: Uint8Array,\n    inputStridesLength: number, outputStrides: Uint8Array,\n    outputStridesLength: number, interpolationModeId: number,\n    fillModeId: number, fillValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n    'number',  // imageId\n    'number',  // transformsId\n    'bool',    // isBatchTransform\n    'number',  // batch\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // numChannels\n    'number',  // imageWidth\n    'number',  // imageHeight\n    'array',   // inputStrides\n    'number',  // inputStridesLength\n    'array',   // outputStrides\n    'number',  // outputStridesLength\n    'number',  // interpolationModeId\n    'number',  // fillModeId\n    'number',  // fillValue\n    'number'   // outId\n  ]);\n}\n\nfunction transform(\n    args:\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n  const inputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n\n  const outputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\n      outWidth, numChannels, imageWidth, imageHeight, inputStrides,\n      image.shape.length - 1, outputStrides, outShape.length - 1,\n      interpolationModeId, fillModeId, fillValue, outId);\n\n  return out;\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform as unknown as KernelFunc\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, KernelFunc, TensorInfo, Unique, UniqueAttrs, UniqueInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {uniqueImplCPU} from '../kernel_utils/shared';\n\nfunction unique(\n    args: {inputs: UniqueInputs, attrs: UniqueAttrs, backend: BackendWasm}):\n    TensorInfo[] {\n  const {inputs, attrs, backend} = args;\n  const {axis} = attrs;\n  const {x} = inputs;\n\n  const {outputValues, outputShape, indices} =\n      uniqueImplCPU(backend.readSync(x.dataId), axis, x.shape, x.dtype);\n\n  return [\n    backend.makeOutput(\n        outputShape, x.dtype, /*memoryOffset=*/undefined, outputValues),\n    backend.makeOutput(\n        [indices.length], 'int32', /*memoryOffset=*/undefined, indices),\n  ];\n}\n\nexport const uniqueConfig: KernelConfig = {\n  kernelName: Unique,\n  backendName: 'wasm',\n  kernelFunc: unique as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as unknown as KernelFunc,\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {acosConfig} from './kernels/Acos';\nimport {acoshConfig} from './kernels/Acosh';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {argMinConfig} from './kernels/ArgMin';\nimport {asinConfig} from './kernels/Asin';\nimport {asinhConfig} from './kernels/Asinh';\nimport {atanConfig} from './kernels/Atan';\nimport {atan2Config} from './kernels/Atan2';\nimport {atanhConfig} from './kernels/Atanh';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {avgPool3DConfig} from './kernels/AvgPool3D';\nimport {avgPool3DGradConfig} from './kernels/AvgPool3DGrad';\nimport {avgPoolGradConfig} from './kernels/AvgPoolGrad';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {bincountConfig} from './kernels/Bincount';\nimport {bitwiseAndConfig} from './kernels/BitwiseAnd';\nimport {broadcastArgsConfig} from './kernels/BroadcastArgs';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {conv3DConfig} from './kernels/Conv3D';\nimport {conv3DBackpropFilterV2Config} from './kernels/Conv3DBackpropFilterV2';\nimport {conv3DBackpropInputV2Config} from './kernels/Conv3DBackpropInputV2';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumprodConfig} from './kernels/Cumprod';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {denseBincountConfig} from './kernels/DenseBincount';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {diagConfig} from './kernels/Diag';\nimport {dilation2DConfig} from './kernels/Dilation2D';\nimport {dilation2DBackpropFilterConfig} from './kernels/Dilation2DBackpropFilter';\nimport {dilation2DBackpropInputConfig} from './kernels/Dilation2DBackpropInput';\nimport {eluConfig} from './kernels/Elu';\nimport {eluGradConfig} from './kernels/EluGrad';\nimport {equalConfig} from './kernels/Equal';\nimport {erfConfig} from './kernels/Erf';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {expm1Config} from './kernels/Expm1';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {isFiniteConfig} from './kernels/IsFinite';\nimport {isInfConfig} from './kernels/IsInf';\nimport {isNaNConfig} from './kernels/IsNan';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {linSpaceConfig} from './kernels/LinSpace';\nimport {logConfig} from './kernels/Log';\nimport {log1pConfig} from './kernels/Log1p';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {logicalXorConfig} from './kernels/LogicalXor';\nimport {lrnConfig} from './kernels/LRN';\nimport {lrnGradConfig} from './kernels/LRNGrad';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {maxPool3DConfig} from './kernels/MaxPool3D';\nimport {maxPool3DGradConfig} from './kernels/MaxPool3DGrad';\nimport {maxPoolGradConfig} from './kernels/MaxPoolGrad';\nimport {maxPoolWithArgmaxConfig} from './kernels/MaxPoolWithArgmax';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multinomialConfig} from './kernels/Multinomial';\nimport {modConfig} from './kernels/Mod';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reciprocalConfig} from './kernels/Reciprocal';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeBilinearGradConfig} from './kernels/ResizeBilinearGrad';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {resizeNearestNeighborGradConfig} from './kernels/ResizeNearestNeighborGrad';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {searchSortedConfig} from './kernels/SearchSorted';\nimport {selectConfig} from './kernels/Select';\nimport {seluConfig} from './kernels/Selu';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {signConfig} from './kernels/Sign';\nimport {sinConfig} from './kernels/Sin';\nimport {sinhConfig} from './kernels/Sinh';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {softplusConfig} from './kernels/Softplus';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {sparseToDenseConfig} from './kernels/SparseToDense';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tensorScatterUpdateConfig} from './kernels/TensorScatterUpdate';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {uniqueConfig} from './kernels/Unique';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  acosConfig,\n  acoshConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  argMinConfig,\n  asinConfig,\n  asinhConfig,\n  atanConfig,\n  atan2Config,\n  atanhConfig,\n  avgPoolConfig,\n  avgPoolGradConfig,\n  avgPool3DConfig,\n  avgPool3DGradConfig,\n  batchMatMulConfig,\n  batchToSpaceNDConfig,\n  bincountConfig,\n  bitwiseAndConfig,\n  broadcastArgsConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  conv3DConfig,\n  conv3DBackpropFilterV2Config,\n  conv3DBackpropInputV2Config,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumprodConfig,\n  cumsumConfig,\n  denseBincountConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  diagConfig,\n  dilation2DConfig,\n  dilation2DBackpropFilterConfig,\n  dilation2DBackpropInputConfig,\n  eluConfig,\n  eluGradConfig,\n  equalConfig,\n  erfConfig,\n  expConfig,\n  expandDimsConfig,\n  expm1Config,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  isFiniteConfig,\n  isInfConfig,\n  isNaNConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  linSpaceConfig,\n  log1pConfig,\n  logConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  logicalXorConfig,\n  lrnConfig,\n  lrnGradConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  maxPool3DConfig,\n  maxPool3DGradConfig,\n  maxPoolGradConfig,\n  maxPoolWithArgmaxConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multinomialConfig,\n  modConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reciprocalConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeBilinearGradConfig,\n  resizeNearestNeighborConfig,\n  resizeNearestNeighborGradConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  searchSortedConfig,\n  selectConfig,\n  seluConfig,\n  sigmoidConfig,\n  signConfig,\n  sinConfig,\n  sinhConfig,\n  sliceConfig,\n  softmaxConfig,\n  softplusConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  sparseToDenseConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tensorScatterUpdateConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  uniqueConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_SIMD_SUPPORT', async () => {\n  try {\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport * as wasmFactoryThreadedSimd_import from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport * as wasmFactory_import from '../wasm-out/tfjs-backend-wasm.js';\n\n// This workaround is required for importing in Node.js without using\n// the node bundle (for testing). This would not be necessary if we\n// flipped esModuleInterop to true, but we likely can't do that since\n// google3 does not use it.\nconst wasmFactoryThreadedSimd = (wasmFactoryThreadedSimd_import.default ||\n                                 wasmFactoryThreadedSimd_import) as\n    typeof wasmFactoryThreadedSimd_import.default;\nconst wasmFactory = (wasmFactory_import.default || wasmFactory_import) as\n    typeof wasmFactory_import.default;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule|BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  override write(\n      values: backend_util.BackendValues|null, shape: number[],\n      dtype: DataType): DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  override numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  override async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  override move(\n      dataId: DataId, values: backend_util.BackendValues|null, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n\n    // `>>> 0` is needed for above 2GB allocations because wasm._malloc returns\n    // a signed int32 instead of an unsigned int32.\n    // https://v8.dev/blog/4gb-wasm-memory\n    const memoryOffset = this.wasm._malloc(numBytes) >>> 0;\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  override async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  override readSync(dataId: DataId, start?: number, end?: number):\n      backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      // Slice all elements.\n      if ((start == null || start === 0) &&\n          (end == null || end >= stringBytes.length)) {\n        return stringBytes;\n      }\n      return stringBytes.slice(start, end);\n    }\n    start = start || 0;\n    end = end || util.sizeFromShape(shape);\n    const bytesPerElement = util.bytesPerElement(dtype);\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset + start * bytesPerElement,\n        memoryOffset + end * bytesPerElement);\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  override disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  override refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  override incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  override floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  override dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  override memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(\n      shape: number[], dtype: DataType, memoryOffset?: number,\n      values?: backend_util.BackendValues): TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(values ?? null, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        // Escape '\\n' because Blob will turn it into a newline.\n        // There should be a setting for this, but 'endings: \"native\"' does\n        // not seem to work.\n        const response = (wasmWorkerContents as string).replace(/\\n/g, '\\\\n');\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The `wasm` promise will resolve to the WASM module created by\n    // the factory, but it might have had errors during creation. Most\n    // errors are caught by the onAbort callback defined above.\n    // However, some errors, such as those occurring from a\n    // failed fetch, result in this promise being rejected. These are\n    // caught and re-rejected below.\n    wasm.then((module) => {\n          initialized = true;\n          initAborted = false;\n\n          const voidReturnType: string = null;\n          // Using the tfjs namespace to avoid conflict with emscripten's API.\n          module.tfjs = {\n            init: module.cwrap('init', null, []),\n            initWithThreadsCount:\n                module.cwrap('init_with_threads_count', null, ['number']),\n            getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n            registerTensor: module.cwrap(\n                'register_tensor', null,\n                [\n                  'number',  // id\n                  'number',  // size\n                  'number',  // memoryOffset\n                ]),\n            disposeData:\n                module.cwrap('dispose_data', voidReturnType, ['number']),\n            dispose: module.cwrap('dispose', voidReturnType, []),\n          };\n\n          resolve({wasm: module});\n        })\n        .catch(reject);\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads: number) {\n  threadsCount = numThreads;\n}\n\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount(): number {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n", "/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '4.22.0';\nexport {version};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n"],
  "mappings": "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",
  "names": ["WasmBackendModuleThreadedSimd", "err", "module", "exports", "buffer", "ret", "WasmBackendModule", "err", "module", "exports", "buffer", "ret", "CppDType", "FusableActivation", "wasmFunc", "setupFunc", "kernelFunc", "supportsFullBroadcast", "wasmFunc", "setupFunc", "kernelFunc", "setup", "setup", "setup", "wasmFunc", "setupFunc", "kernelFunc", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "outVals", "prod", "setup", "x", "supportsFullBroadcast", "setup", "outVals", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "InterpolationMethod", "setup", "setup", "reverse", "setup", "reverse", "setup", "x", "setup", "setup", "pad", "setup", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "supportsFullBroadcast", "setup", "supportsFullBroadcast", "setup", "mean", "setup", "pad", "setup", "pad", "setup", "setup", "supportsFullBroadcast", "supportsFullBroadcast", "wasmFunc", "setupFunc", "supportsFullBroadcast", "supportsFullBroadcast", "setup", "supportsFullBroadcast", "supportsFullBroadcast", "supportsFullBroadcast", "setup", "setup", "setup", "supportsFullBroadcast", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "setup", "supportsFullBroadcast", "MirrorPaddingMode", "setup", "wasmFunc", "setup", "setup", "supportsFullBroadcast", "wasmFunc", "setup", "wasmFunc", "setup", "wasmFunc", "setup", "kernelFunc", "supportsFullBroadcast", "setup", "setup", "supportsFullBroadcast", "setup", "setup", "step", "supportsFullBroadcast", "setup", "setup", "setup", "setup", "setup", "setup", "setup", "setup", "setup", "wasmFunc", "setup", "prod", "setup", "setup", "setup", "setup", "setup", "setup", "supportsFullBroadcast", "setup", "setup", "supportsFullBroadcast", "setup", "setup", "tensor", "setup", "setup", "setup"]
}
