{#<!DOCTYPE html>#}
{#<html lang="fr">#}
{#<head>#}
{#    <meta charset="UTF-8">#}
{#    <meta name="viewport" content="width=device-width, initial-scale=1.0">#}
{#    <title>Connexion - Coachini</title>#}
{#    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">#}
{#    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">#}
{#    <script src="https://www.google.com/recaptcha/api.js" async defer></script>#}
{#</head>#}
{#<body>#}
{#<div class="particles" id="particles"></div>#}
{#<div class="container mt-5">#}
{#    <div class="row justify-content-center">#}
{#        <div class="col-md-6">#}
{#            <div class="card shadow-lg">#}
{#                <div class="card-body p-5">#}
{#                    <div class="text-center mb-4">#}
{#                        <img src="{{ asset('img/logoo.png') }}" alt="Coachini Logo" class="mb-4" style="max-width: 150px;">#}
{#                        <h2 class="fw-bold text-white">Bienvenue dans Coachini</h2>#}
{#                        <p class="text-white-50">Connectez-vous à votre compte</p>#}
{#                    </div>#}

{#                    {% if not is_authenticated %}#}
{#                        <form method="post">#}
{#                            {% if error %}#}
{#                                <div class="alert alert-danger">{{ error.messageKey|trans(error.messageData, 'security') }}</div>#}
{#                            {% endif %}#}

{#                            <div class="mb-3">#}
{#                                <label for="inputEmail" class="form-label text-white">Email</label>#}
{#                                <input type="email" value="{{ last_username }}" name="email" id="inputEmail" class="form-control" autocomplete="email" required autofocus>#}
{#                            </div>#}

{#                            <div class="mb-3">#}
{#                                <label for="inputPassword" class="form-label text-white">Mot de passe</label>#}
{#                                <input type="password" name="password" id="inputPassword" class="form-control" autocomplete="current-password" required>#}
{#                            </div>#}


{#                            <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">#}

{#                            <div class="mb-3 recaptcha-wrapper">#}
{#                                <div class="g-recaptcha" data-sitekey="{{ recaptcha_site_key }}"></div>#}
{#                            </div>#}

{#                            <div class="mb-3">#}
{#                                <div class="form-check">#}
{#                                    <input class="form-check-input" type="checkbox" name="_remember_me" id="remember_me">#}
{#                                    <label class="form-check-label text-white" for="remember_me">#}
{#                                        Se souvenir de moi#}
{#                                    </label>#}
{#                                </div>#}
{#                            </div>#}

{#                            <button class="btn btn-primary w-100 py-3 mb-3" type="submit">#}
{#                                Se connecter#}
{#                            </button>#}

{#                            <div class="text-center">#}
{#                                <p class="mb-0 text-white">Pas encore de compte ? <a href="{{ path('app_r') }}" class="text-white text-decoration-none">S'inscrire</a></p>#}
{#                            </div>#}
{#                            <div class="text-center mt-2">#}
{#                                <a href="#" class="text-white text-decoration-none" data-bs-toggle="modal" data-bs-target="#forgotPasswordModal">#}
{#                                    Mot de passe oublié ?#}
{#                                </a>#}
{#                            </div>#}

{#                            <!-- Modal : Récupération du mot de passe -->#}
{#                            <div class="modal fade" id="forgotPasswordModal" tabindex="-1" aria-hidden="true">#}
{#                                <div class="modal-dialog modal-dialog-centered">#}
{#                                    <div class="modal-content bg-dark text-white" style="border-radius:1rem; background:rgba(0,0,0,0.8);">                                        <div class="modal-header border-0">#}
{#                                            <h5 class="modal-title">Récupération</h5>#}
{#                                            <button type="button"#}
{#                                                    class="btn-close btn-close-white"#}
{#                                                    data-bs-dismiss="modal"#}
{#                                                    aria-label="Close">#}
{#                                            </button>#}

{#                                        </div>#}
{#                                        <div class="modal-body">#}
{#                                            <div id="step-email">#}
{#                                                <label for="recoveryEmail" class="form-label">Entrez votre email</label>#}
{#                                                <input type="email" id="recoveryEmail" class="form-control mb-3" placeholder="votre@email.tn" autofocus>#}

{#                                                <div class="d-flex align-items-center">#}
{#                                                    <button id="sendCodeBtn" class="btn btn-primary flex-grow-1 py-2">#}
{#                                                        Envoyer un code#}
{#                                                    </button>#}
{#                                                    <span id="countdown" class="ms-3 text-white-50"></span>#}
{#                                                </div>#}
{#                                            </div>#}

{#                                            <div id="step-code" class="mt-4" style="display:none;">#}
{#                                                <label for="recoveryCode" class="form-label">Code de récupération</label>#}
{#                                                <input type="text" id="recoveryCode" class="form-control mb-3" placeholder="XXXXXX">#}
{#                                                <button id="verifyCodeBtn" class="btn btn-primary w-100 py-2">Vérifier le code</button>#}
{#                                            </div>#}

{#                                            <div id="step-newpass" class="mt-4" style="display:none;">#}
{#                                                <label for="newPassword" class="form-label">Nouveau mot de passe</label>#}
{#                                                <input type="password" id="newPassword" class="form-control mb-3" placeholder="********">#}
{#                                                <button id="savePassBtn" class="btn btn-primary w-100 py-2">Enregistrer</button>#}
{#                                            </div>#}
{#                                        </div>#}
{#                                    </div>#}
{#                                </div>#}
{#                            </div>#}
{#                        </form>#}
{#                    {% endif %}#}
{#                </div>#}
{#            </div>#}
{#        </div>#}
{#    </div>#}
{#</div>#}

{#<style>#}
{#    body {#}
{#        background: #000;#}
{#        min-height: 100vh;#}
{#        display: flex;#}
{#        align-items: center;#}
{#        margin: 0;#}
{#        padding: 0;#}
{#        overflow: auto;#}
{#    }#}

{#    .particles {#}
{#        position: fixed;#}
{#        top: 0;#}
{#        left: 0;#}
{#        width: 100%;#}
{#        height: 100%;#}
{#        pointer-events: none;#}
{#        z-index: -1;#}
{#    }#}

{#    .particle {#}
{#        position: absolute;#}
{#        width: 2px;#}
{#        height: 2px;#}
{#        background: #FF6B00;#}
{#        border-radius: 50%;#}
{#        animation: float 15s infinite linear;#}
{#    }#}

{#    @keyframes float {#}
{#        0% {#}
{#            transform: translateY(0) translateX(0);#}
{#            opacity: 0;#}
{#        }#}
{#        50% {#}
{#            opacity: 0.5;#}
{#        }#}
{#        100% {#}
{#            transform: translateY(-100vh) translateX(100px);#}
{#            opacity: 0;#}
{#        }#}
{#    }#}

{#    .card {#}
{#        border: none;#}
{#        border-radius: 15px;#}
{#        background: rgba(255, 255, 255, 0.1);#}
{#        backdrop-filter: blur(10px);#}
{#        animation: fadeIn 1s ease-in-out;#}
{#    }#}

{#    @keyframes fadeIn {#}
{#        from { opacity: 0; transform: translateY(20px); }#}
{#        to { opacity: 1; transform: translateY(0); }#}
{#    }#}

{#    .form-control {#}
{#        border-radius: 10px;#}
{#        padding: 12px;#}
{#        border: 2px solid rgba(255, 255, 255, 0.2);#}
{#        transition: all 0.3s ease;#}
{#        background: rgba(255, 255, 255, 0.1);#}
{#        color: white;#}
{#    }#}

{#    .form-control:focus {#}
{#        border-color: #FF6B00;#}
{#        box-shadow: 0 0 0 0.2rem rgba(255, 107, 0, 0.25);#}
{#        background: rgba(255, 255, 255, 0.2);#}
{#        color: white;#}
{#    }#}

{#    .form-control::placeholder {#}
{#        color: rgba(255, 255, 255, 0.6);#}
{#    }#}

{#    .form-label {#}
{#        color: white;#}
{#        font-weight: 600;#}
{#        margin-bottom: 0.5rem;#}
{#    }#}

{#    .btn-primary {#}
{#        background-color: #FF6B00;#}
{#        border-color: #FF6B00;#}
{#        font-weight: 600;#}
{#        position: relative;#}
{#        overflow: hidden;#}
{#    }#}

{#    .btn-primary:hover {#}
{#        background-color: #e55c00;#}
{#        border-color: #e55c00;#}
{#    }#}


{#    .btn-primary::after {#}
{#        content: '';#}
{#        position: absolute;#}
{#        top: 0;#}
{#        left: -100%;#}
{#        width: 100%;#}
{#        height: 100%;#}
{#        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);#}
{#        transition: 0.5s;#}
{#    }#}

{#    .btn-primary:hover::after {#}
{#        left: 100%;#}
{#    }#}

{#    .text-white {#}
{#        color: white !important;#}
{#    }#}

{#    .text-white-50 {#}
{#        color: rgba(255, 255, 255, 0.5) !important;#}
{#    }#}

{#    .alert-danger {#}
{#        background: rgba(255, 0, 0, 0.1);#}
{#        border: 1px solid rgba(255, 0, 0, 0.2);#}
{#        color: white;#}
{#        animation: slideIn 0.5s ease-out;#}
{#    }#}
{#    /* Bouton vert et désactivé */#}
{#    .btn-success-disabled {#}
{#        background-color: #28a745 !important;#}
{#        border-color: #28a745 !important;#}
{#        cursor: default !important;#}
{#        opacity: 0.8;#}
{#    }#}



{#    @keyframes slideIn {#}
{#        from { transform: translateX(-100%); opacity: 0; }#}
{#        to { transform: translateX(0); opacity: 1; }#}
{#    }#}

{#</style>#}
{#<style>#}
{#    .recaptcha-wrapper {#}
{#        /* centre le widget */#}
{#        text-align: center;#}
{#        margin-bottom: 1rem;#}
{#    }#}

{#    .recaptcha-wrapper .g-recaptcha {#}
{#        /* échelle à 90 % de sa taille native */#}
{#        transform: scale(0.9);#}
{#        transform-origin: top center;#}
{#        /* conserve l’espace pour éviter le crop */#}
{#        display: inline-block;#}
{#    }#}
{#</style>#}



{#<script>#}
{#    function createParticles() {#}
{#        const particlesContainer = document.getElementById('particles');#}
{#        for (let i = 0; i < 50; i++) {#}
{#            const particle = document.createElement('div');#}
{#            particle.className = 'particle';#}
{#            particle.style.left = Math.random() * 100 + '%';#}
{#            particle.style.top = Math.random() * 100 + '%';#}
{#            particle.style.animationDelay = Math.random() * 15 + 's';#}
{#            particlesContainer.appendChild(particle);#}
{#        }#}
{#    }#}

{#    createParticles();#}
{#</script>#}
{#<!-- Ajout de SweetAlert2 et gestion des pop-ups -->#}
{#<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>#}
{#<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>#}
{#<script>#}
{#    document.addEventListener('DOMContentLoaded', function () {#}
{#        {% for message in app.flashes('success') %}#}
{#        Swal.fire({#}
{#            icon: 'success',#}
{#            title: 'Succès',#}
{#            text: '{{ message }}',#}
{#            timer: 3000,#}
{#            timerProgressBar: true,#}
{#            showConfirmButton: false,#}
{#            background: '#1a1a1a',#}
{#            color: '#fff',#}
{#            toast: true,#}
{#            position: 'top-end'#}
{#        });#}
{#        {% endfor %}#}

{#        {% for message in app.flashes('error') %}#}
{#        Swal.fire({#}
{#            icon: 'error',#}
{#            title: 'Erreur',#}
{#            text: '{{ message }}',#}
{#            timer: 5000,#}
{#            timerProgressBar: true,#}
{#            showConfirmButton: false,#}
{#            background: '#1a1a1a',#}
{#            color: '#fff',#}
{#            toast: true,#}
{#            position: 'top-end'#}
{#        });#}
{#        {% endfor %}#}

{#        {% if is_authenticated %}#}
{#        Swal.fire({#}
{#            icon: 'success',#}
{#            title: 'Connexion réussie',#}
{#            text: 'Vous êtes connecté en tant que : {{ user_fullname }}, Rôle : {{ user_role }}',#}
{#            timer: 5000,#}
{#            showConfirmButton: false,#}
{#            background: '#1a1a1a',#}
{#            color: '#fff',#}
{#            willClose: () => {#}
{#                // Redirection conditionnelle#}
{#                {% if user_role == 'admin' %}#}
{#                window.location.href = '{{ path('app_home') }}'; // Changé de app_dashboard à admin_dashboard#}
{#                {% else %}#}
{#                window.location.href = '{{ path('app_homee') }}';#}
{#                {% endif %}#}
{#            }#}
{#        });#}
{#        {% endif %}#}
{#    });#}
{#</script>#}
{#<script>#}
{#    document.addEventListener('DOMContentLoaded', () => {#}
{#        const modalEl     = document.getElementById('forgotPasswordModal');#}
{#        const sendBtn     = document.getElementById('sendCodeBtn');#}
{#        const countdownEl = document.getElementById('countdown');#}
{#        const stepEmail   = document.getElementById('step-email');#}
{#        const stepCode    = document.getElementById('step-code');#}
{#        const stepNewPass = document.getElementById('step-newpass');#}
{#        let timer;#}

{#        // 1) Quand la modal s'ouvre, on focus l'email#}
{#        modalEl.addEventListener('shown.bs.modal', () => {#}
{#            document.getElementById('recoveryEmail').focus();#}
{#        });#}

{#        // 2) Envoi du code#}
{#        sendBtn.addEventListener('click', () => {#}
{#            const email = document.getElementById('recoveryEmail').value.trim();#}
{#            if (!email) return Swal.fire('Erreur','Email requis','error');#}

{#            fetch(`/password/recover?email=${encodeURIComponent(email)}`)#}
{#                .then(r => r.ok ? r.json() : Promise.reject())#}
{#                .then(() => {#}
{#                    sendBtn.textContent = 'Code envoyé';#}
{#                    sendBtn.classList.add('btn-success-disabled');#}
{#                    sendBtn.disabled = true;#}
{#                    let sec = 15;#}
{#                    countdownEl.textContent = `${sec}s`;#}
{#                    timer = setInterval(() => {#}
{#                        if (--sec <= 0) {#}
{#                            clearInterval(timer);#}
{#                            sendBtn.textContent = 'Envoyer un code';#}
{#                            sendBtn.classList.remove('btn-success-disabled');#}
{#                            sendBtn.disabled = false;#}
{#                            countdownEl.textContent = '';#}
{#                        } else {#}
{#                            countdownEl.textContent = `${sec}s`;#}
{#                        }#}
{#                    }, 1000);#}
{#                    stepCode.style.display = 'block';#}
{#                })#}
{#                .catch(() => Swal.fire('Erreur','Envoi du code échoué','error'));#}
{#        });#}

{#        // 3) Vérification du code#}
{#        document.getElementById('verifyCodeBtn').addEventListener('click', () => {#}
{#            const code = document.getElementById('recoveryCode').value.trim();#}
{#            if (!code) return Swal.fire('Erreur','Code requis','error');#}

{#            fetch(`/password/verify?code=${encodeURIComponent(code)}`)#}
{#                .then(r => r.ok ? r.json() : Promise.reject())#}
{#                .then(data => {#}
{#                    if (data.valid) {#}
{#                        Swal.fire('Succès','Code valide','success');#}
{#                        stepNewPass.style.display = 'block';#}
{#                    } else {#}
{#                        Swal.fire('Erreur','Code invalide','error');#}
{#                    }#}
{#                })#}
{#                .catch(() => Swal.fire('Erreur','Vérification impossible','error'));#}
{#        });#}

{#        // 4) Quand la modal se referme, on reset tout ET on supprime le backdrop collant#}
{#        modalEl.addEventListener('hidden.bs.modal', () => {#}
{#            clearInterval(timer);#}
{#            // remise à zéro des étapes et champs#}
{#            sendBtn.textContent = 'Envoyer un code';#}
{#            sendBtn.disabled = false;#}
{#            sendBtn.classList.remove('btn-success-disabled');#}
{#            countdownEl.textContent = '';#}
{#            document.getElementById('recoveryEmail').value = '';#}
{#            document.getElementById('recoveryCode').value  = '';#}
{#            document.getElementById('newPassword').value   = '';#}
{#            stepEmail.style.display   = 'block';#}
{#            stepCode.style.display    = 'none';#}
{#            stepNewPass.style.display = 'none';#}
{#            // retirer la classe modal-open et le backdrop#}
{#            document.body.classList.remove('modal-open');#}
{#            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());#}
{#        });#}
{#    });#}
{#</script>#}



{#<script>#}
{#    grecaptcha.ready(function() {#}
{#        grecaptcha.execute('{{ recaptcha_site_key }}', { action: 'login' })#}
{#            .then(function(token) {#}
{#                document.getElementById('captcha_token').value = token;#}
{#            });#}
{#    });#}
{#</script>#}
{#</body>#}
{#</html>#}

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Connexion - Coachini</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
</head>
<body>
<div class="particles" id="particles"></div>
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <img src="{{ asset('img/logoo.png') }}"
                             alt="Coachini Logo"
                             class="mb-4"
                             style="max-width: 150px;">
                        <h2 class="fw-bold text-white">Bienvenue dans Coachini</h2>
                        <p class="text-white-50">Connectez-vous à votre compte</p>
                    </div>

                    {% if not is_authenticated %}
                        <form method="post">
                            {% if error %}
                                <div class="alert alert-danger">
                                    {{ error.messageKey|trans(error.messageData, 'security') }}
                                </div>
                            {% endif %}

                            <div class="mb-3">
                                <label for="inputEmail"
                                       class="form-label text-white">Email</label>
                                <input type="email"
                                       value="{{ last_username }}"
                                       name="email"
                                       id="inputEmail"
                                       class="form-control"
                                       autocomplete="email"
                                       required
                                       autofocus>
                            </div>

                            <div class="mb-3">
                                <label for="inputPassword"
                                       class="form-label text-white">Mot de passe</label>
                                <input type="password"
                                       name="password"
                                       id="inputPassword"
                                       class="form-control"
                                       autocomplete="current-password"
                                       required>
                            </div>

                            <input type="hidden"
                                   name="_csrf_token"
                                   value="{{ csrf_token('authenticate') }}">

                            <div class="mb-3 recaptcha-wrapper">
                                <div class="g-recaptcha" data-sitekey="{{ recaptcha_site_key|e('html_attr')|default('') }}"></div>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input"
                                           type="checkbox"
                                           name="_remember_me"
                                           id="remember_me">
                                    <label class="form-check-label text-white"
                                           for="remember_me">
                                        Se souvenir de moi
                                    </label>
                                </div>
                            </div>

                            <button class="btn btn-primary w-100 py-3 mb-3"
                                    type="submit">
                                Se connecter
                            </button>

                            <div class="text-center">
                                <p class="mb-0 text-white">
                                    Pas encore de compte ?
                                    <a href="{{ path('app_r') }}"
                                       class="text-white text-decoration-none">S'inscrire</a>
                                </p>
                            </div>
                            <div class="text-center mt-2">
                                <a href="#"
                                   class="text-white text-decoration-none"
                                   data-bs-toggle="modal"
                                   data-bs-target="#forgotPasswordModal">
                                    Mot de passe oublié ?
                                </a>
                            </div>
                        </form>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal : Récupération du mot de passe -->
<div class="modal fade"
     id="forgotPasswordModal"
     tabindex="-1"
     aria-hidden="true"
     data-bs-keyboard="true"
     data-bs-focus="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark text-white" style="border-radius:1rem; background:rgba(0,0,0,0.8);">
            <div class="modal-header">
                <h5 class="modal-title">Récupération</h5>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Fermer"></button>
            </div>
            <div class="modal-body">
                <div id="step-email">
                    <label for="recoveryEmail"
                           class="form-label">Entrez votre email</label>
                    <input type="email"
                           id="recoveryEmail"
                           class="form-control mb-3"
                           placeholder="votre@email.tn"
                           autofocus>

                    <div class="d-flex align-items-center">
                        <button id="sendCodeBtn"
                                class="btn btn-primary flex-grow-1 py-2">
                            Envoyer un code
                        </button>
                        <span id="countdown"
                              class="ms-3 text-muted"></span>
                    </div>
                </div>

                <div id="step-code"
                     class="mt-4"
                     style="display:none;">
                    <label for="recoveryCode"
                           class="form-label">Code de récupération</label>
                    <input type="text"
                           id="recoveryCode"
                           class="form-control mb-3"
                           placeholder="XXXXXX">
                    <button id="verifyCodeBtn"
                            class="btn btn-primary w-100 py-2">
                        Vérifier le code
                    </button>
                </div>

                <div id="step-newpass"
                     class="mt-4"
                     style="display:none;">
                    <label for="newPassword"
                           class="form-label">Nouveau mot de passe</label>
                    <input type="password"
                           id="newPassword"
                           class="form-control mb-3"
                           placeholder="********">
                    <button id="savePassBtn"
                            class="btn btn-primary w-100 py-2">
                        Enregistrer
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background: #000;
        min-height: 100vh;
        display: flex;
        align-items: center;
        margin: 0;
        padding: 0;
        overflow: auto;
    }
    .particles {
        position: fixed;
        top: 0; left: 0;
        width: 100%; height: 100%;
        pointer-events: none; z-index: -1;
    }
    .particle {
        position: absolute;
        width: 2px; height: 2px;
        background: #FF6B00; border-radius: 50%;
        animation: float 15s infinite linear;
    }
    @keyframes float {
        0%   { transform: translateY(0) translateX(0); opacity: 0; }
        50%  { opacity: 0.5; }
        100% { transform: translateY(-100vh) translateX(100px); opacity: 0; }
    }
    .card {
        border: none; border-radius: 15px;
        background: rgba(255,255,255,0.1);
        backdrop-filter: blur(10px);
        animation: fadeIn 1s ease-in-out;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to   { opacity: 1; transform: translateY(0); }
    }
    .form-control {
        border-radius: 10px; padding: 12px;
        border: 2px solid rgba(255,255,255,0.2);
        background: rgba(255,255,255,0.1);
        color: white; transition: all 0.3s ease;
    }
    .form-control:focus {
        border-color: #FF6B00;
        box-shadow: 0 0 0 0.2rem rgba(255,107,0,0.25);
        background: rgba(255,255,255,0.2);
        color: white;
    }
    .form-control::placeholder {
        color: rgba(255,255,255,0.6);
    }
    .form-label {
        color: white; font-weight: 600;
        margin-bottom: .5rem;
    }
    .btn-primary {
        background-color: #FF6B00;
        border-color: #FF6B00;
        font-weight: 600;
        position: relative; overflow: hidden;
    }
    .btn-primary:hover {
        background-color: #e55c00;
        border-color: #e55c00;
    }
    .btn-primary::after {
        content: '';
        position: absolute;
        top: 0; left: -100%;
        width: 100%; height: 100%;
        background: linear-gradient(90deg,
        transparent, rgba(255,255,255,0.2), transparent);
        transition: .5s;
    }
    .btn-primary:hover::after { left: 100%; }
    .text-white   { color: white !important; }
    .text-white-50 { color: rgba(255,255,255,0.5) !important; }
    .alert-danger  {
        background: rgba(255,0,0,0.1);
        border: 1px solid rgba(255,0,0,0.2);
        color: white; animation: slideIn .5s ease-out;
    }
    /* Bouton vert et désactivé */
    .btn-success-disabled {
        background-color: #28a745 !important;
        border-color: #28a745 !important;
        cursor: default !important;
        opacity: 0.8;
    }
    @keyframes slideIn {
        from { transform: translateX(-100%); opacity: 0; }
        to   { transform: translateX(0);    opacity: 1; }
    }
    .recaptcha-wrapper {
        text-align: center; margin-bottom: 1rem;
    }
    .recaptcha-wrapper .g-recaptcha {
        transform: scale(0.9);
        transform-origin: top center;
        display: inline-block;
    }
</style>

<script>
    function createParticles() {
        const c = document.getElementById('particles');
        for (let i = 0; i < 50; i++) {
            const p = document.createElement('div');
            p.className = 'particle';
            p.style.left = Math.random() * 100 + '%';
            p.style.top  = Math.random() * 100 + '%';
            p.style.animationDelay = Math.random() * 15 + 's';
            c.appendChild(p);
        }
    }
    createParticles();
</script>

<!-- 1) Bootstrap JS bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- 2) SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- 3) Gestion des pop-ups pour flash messages et redirection -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        {% for message in app.flashes('success') %}
        Swal.fire({
            icon: 'success',
            title: 'Succès',
            text: '{{ message }}',
            timer: 3000,
            timerProgressBar: true,
            showConfirmButton: false,
            background: '#1a1a1a',
            color: '#fff',
            toast: true,
            position: 'top-end'
        });
        {% endfor %}

        {% for message in app.flashes('error') %}
        Swal.fire({
            icon: 'error',
            title: 'Erreur',
            text: '{{ message }}',
            timer: 5000,
            timerProgressBar: true,
            showConfirmButton: false,
            background: '#1a1a1a',
            color: '#fff',
            toast: true,
            position: 'top-end'
        });
        {% endfor %}

        {% if is_authenticated %}
        Swal.fire({
            icon: 'success',
            title: 'Connexion réussie',
            text: 'Vous êtes connecté en tant que : {{ user_fullname }}, Rôle : {{ user_role }}',
            timer: 5000,
            showConfirmButton: false,
            background: '#1a1a1a',
            color: '#fff',
            willClose: () => {
                // Redirection conditionnelle
                {% if user_role == 'admin' %}
                window.location.href = '{{ path('app_home') }}';
                {% else %}
                window.location.href = '{{ path('app_homee') }}';
                {% endif %}
            }
        });
        {% endif %}
    });
</script>

<!-- 4) Gestion du modal et des appels AJAX pour la récupération de mot de passe -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const modalElement = document.getElementById('forgotPasswordModal');
        const modal = new bootstrap.Modal(modalElement);
        const sendBtn = document.getElementById('sendCodeBtn');
        const verifyBtn = document.getElementById('verifyCodeBtn');
        const savePassBtn = document.getElementById('savePassBtn');
        const recoveryEmail = document.getElementById('recoveryEmail');
        const recoveryCode = document.getElementById('recoveryCode');
        const newPassword = document.getElementById('newPassword');
        const countdown = document.getElementById('countdown');
        const stepEmail = document.getElementById('step-email');
        const stepCode = document.getElementById('step-code');
        const stepNewPass = document.getElementById('step-newpass');
        let timerId;

        // Open the modal and set aria-hidden immediately
        document.querySelector('[data-bs-target="#forgotPasswordModal"]').addEventListener('click', (e) => {
            e.preventDefault();
            console.log('Opening modal');
            modalElement.setAttribute('aria-hidden', 'false');
            modal.show();
            document.getElementById('recoveryEmail').focus();
        });

        // When the modal is hidden, reset aria-hidden and clean up
        modalElement.addEventListener('hidden.bs.modal', () => {
            console.log('Modal hidden event triggered');
            modalElement.setAttribute('aria-hidden', 'true');
            clearInterval(timerId);
            sendBtn.disabled = false;
            sendBtn.textContent = 'Envoyer un code';
            sendBtn.classList.remove('btn-success-disabled');
            countdown.textContent = '';
            recoveryEmail.value = '';
            recoveryCode.value = '';
            newPassword.value = '';
            stepEmail.style.display = 'block';
            stepCode.style.display = 'none';
            stepNewPass.style.display = 'none';
            // Remove modal-open class and backdrop
            document.body.classList.remove('modal-open');
            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
        });

        // Étape 1 : Envoyer le code
        sendBtn.addEventListener('click', async () => {
            const email = recoveryEmail.value;
            if (!email) {
                Swal.fire('Erreur', 'Veuillez entrer un e-mail.', 'error');
                return;
            }

            try {
                const response = await fetch('/password/recover', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Accept': 'application/json'
                    },
                    body: `email=${encodeURIComponent(email)}`
                });

                // Loguer la réponse brute pour déboguer
                const rawResponse = await response.text();
                console.log('Raw response from /password/recover:', rawResponse);

                // Tenter de parser la réponse en JSON
                const data = JSON.parse(rawResponse);

                if (response.ok) {
                    Swal.fire('Succès', 'Code envoyé à votre e-mail.', 'success');
                    sendBtn.disabled = true;
                    sendBtn.textContent = 'Code envoyé';
                    sendBtn.classList.add('btn-success-disabled');
                    let seconds = 15;
                    countdown.textContent = `${seconds}s`;
                    timerId = setInterval(() => {
                        seconds--;
                        if (seconds > 0) {
                            countdown.textContent = `${seconds}s`;
                        } else {
                            clearInterval(timerId);
                            sendBtn.disabled = false;
                            sendBtn.textContent = 'Envoyer un code';
                            sendBtn.classList.remove('btn-success-disabled');
                            countdown.textContent = '';
                        }
                    }, 1000);
                    stepEmail.style.display = 'none';
                    stepCode.style.display = 'block';
                    recoveryCode.focus();
                } else {
                    Swal.fire('Erreur', data.error || 'Échec de l’envoi.', 'error');
                }
            } catch (error) {
                console.error('Error during password recovery:', error.message);
                Swal.fire('Erreur', 'Une erreur s’est produite : ' + error.message, 'error');
            }
        });

        // Étape 2 : Vérifier le code
        verifyBtn.addEventListener('click', async () => {
            const code = recoveryCode.value;
            if (!code) {
                Swal.fire('Erreur', 'Veuillez entrer le code.', 'error');
                return;
            }

            try {
                const response = await fetch('/password/verify', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Accept': 'application/json'
                    },
                    body: `code=${encodeURIComponent(code)}`
                });
                const data = await response.json();

                if (response.ok && data.valid) {
                    Swal.fire('Succès', 'Code vérifié.', 'success');
                    stepCode.style.display = 'none';
                    stepNewPass.style.display = 'block';
                    newPassword.focus();
                } else {
                    Swal.fire('Erreur', 'Code invalide.', 'error');
                }
            } catch (error) {
                console.error('Error during code verification:', error);
                Swal.fire('Erreur', 'Une erreur s’est produite.', 'error');
            }
        });

        // Étape 3 : Réinitialiser le mot de passe
        savePassBtn.addEventListener('click', async () => {
            const password = newPassword.value;
            const code = recoveryCode.value;
            if (!password || !code) {
                Swal.fire('Erreur', 'Veuillez entrer un mot de passe et un code.', 'error');
                return;
            }

            try {
                const response = await fetch('/password/reset', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Accept': 'application/json'
                    },
                    body: `newPassword=${encodeURIComponent(password)}&code=${encodeURIComponent(code)}`
                });
                const data = await response.json();

                if (response.ok) {
                    Swal.fire('Succès', 'Mot de passe réinitialisé.', 'success');
                    modal.hide();
                } else {
                    Swal.fire('Erreur', data.error || 'Échec de la réinitialisation.', 'error');
                }
            } catch (error) {
                console.error('Error during password reset:', error);
                Swal.fire('Erreur', 'Une erreur s’est produite.', 'error');
            }
        });
    });
</script>
</body>
</html>