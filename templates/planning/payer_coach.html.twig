{% extends 'base.html.twig' %}

{% block title %}Paiement Planning{% endblock %}

{% block Hero_Section_Begin %}
    <section class="breadcrumb-section set-bg" data-setbg="{{ asset('img/breadcrumb-bg.jpg') }}">
        <div class="container" >
            <div class="row">
                <div class="col-lg-12 text-center">
                    <div class="breadcrumb-text">
                        <h2 style="margin-bottom: 10px;">DÉTAILS DE PAIEMENT</h2>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block body %}
    <section class="coach-detail-section" style="background-color: #121212; min-height: 100vh; padding: 40px 0;">
        <div class="container py-5">
            <div class="row">
                <!-- Card Coach Detail -->
                <div class="col-lg-6 mb-4">
                    <div class="card border-0 shadow" style="background-color: #1e1e1e;">
                        <div class="card-header" style="background: linear-gradient(135deg, #FF7B00 0%, #FFAA00 100%); color: #000;">
                            <h4 class="mb-0">{{ coach.nom }} {{ coach.prenom }}</h4>
                        </div>
                        <div style="height: 300px; overflow: hidden;">
                            <img src="{{ asset('img/' ~ coach.image) }}"
                                 class="w-100 h-100 object-fit-cover"
                                 alt="Photo de {{ coach.nom }}"
                                 style="object-position: top center;">
                        </div>
                        <div class="card-body text-white">
                            <div class="d-flex align-items-center mb-3">
                                <div class="rating-stars mr-2">
                                    {% for i in 1..5 %}
                                        {% if i <= 4 %}
                                            <i class="fas fa-star" style="color: #FFAA00;"></i>
                                        {% else %}
                                            <i class="far fa-star" style="color: #FFAA00;"></i>
                                        {% endif %}
                                    {% endfor %}
                                </div>
                                <span class="text-muted">(4/5)</span>
                            </div>
                            <ul class="list-group list-group-flush bg-transparent">
                                <li class="list-group-item d-flex justify-content-between align-items-center px-0 bg-transparent border-dark">
                                    <span><i class="fas fa-dumbbell mr-2" style="color: #FF7B00;"></i>Spécialité</span>
                                    <span class="badge" style="background: linear-gradient(135deg, #FF7B00 0%, #FFAA00 100%); color: #000;">{{ coach.specialite }}</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center px-0 bg-transparent border-dark">
                                    <span><i class="fas fa-calendar-alt mr-2" style="color: #FF7B00;"></i>Expérience</span>
                                    <span class="badge" style="background: linear-gradient(135deg, #FF7B00 0%, #FFAA00 100%); color: #000;">{{ coach.anneeExperience }} an{{ coach.anneeExperience > 1 ? 's' : '' }}</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center px-0 bg-transparent border-dark">
                                    <span><i class="fas fa-clipboard-list mr-2" style="color: #FF7B00;"></i>Planning</span>
                                    <span class="text-right">{{ planning ? planning.titre : 'Aucun planning' }}</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center px-0 bg-transparent border-dark">
                                    <span><i style="color: #FF7B00;"></i>Tarif</span>
                                    <span class="font-weight-bold" style="color: #FFAA00;">{{ planning ? planning.tarif ~ ' $' : 'Non défini' }}</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Card Paiement -->
                <div class="col-lg-6 mb-4">
                    <div class="card border-0 shadow" style="background-color: #1e1e1e;">
                        <div class="card-header" style="background: linear-gradient(135deg, #FF7B00 0%, #FFAA00 100%); color: #000;">
                            <h4 class="mb-0"><i class="fas fa-credit-card mr-2"></i>Paiement sécurisé</h4>
                        </div>
                        <div class="card-body text-white">
                            {% if planning %}
                                <form id="payment-form">
                                    <div class="form-group mb-3">
                                        <label class="font-weight-bold">Numéro de carte</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text bg-dark border-dark"><i class="far fa-credit-card" style="color: #FFAA00;"></i></span>
                                            </div>
                                            <div id="card-number-element" class="form-control bg-dark border-dark text-white"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label class="font-weight-bold">Date d'expiration</label>
                                                <div id="card-expiry-element" class="form-control bg-dark border-dark text-white"></div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label class="font-weight-bold">CVC</label>
                                                <div class="input-group">
                                                    <div id="card-cvc-element" class="form-control bg-dark border-dark text-white"></div>
                                                    <div class="input-group-append">
                                                        <span class="input-group-text bg-dark border-dark"><i class="fas fa-question-circle" data-toggle="tooltip" title="3 chiffres au dos de votre carte" style="color: #FFAA00;"></i></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group mb-4">
                                        <label class="font-weight-bold">Nom du titulaire</label>
                                        <input type="text" class="form-control bg-dark border-dark text-white" placeholder="John Doe" required>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mb-3 p-3" style="background-color: #252525; border-radius: 8px;">
                                        <span class="font-weight-bold">Total à payer:</span>
                                        <span class="h4 mb-0" style="color: #FFAA00;">{{ planning.tarif is defined ? planning.tarif : '0' }} $</span>
                                    </div>

                                    <button type="submit" class="btn btn-block py-3 font-weight-bold" style="background: linear-gradient(135deg, #FF7B00 0%, #FFAA00 100%); border: none; color: #000;">
                                        <i class="fas fa-lock mr-2"></i> Payer maintenant
                                    </button>

                                    <div class="text-center mt-3">
                                        <div class="d-flex justify-content-center mb-2">
                                            <img src="{{ asset('img/paiement_securise.png') }}" alt="Méthodes de paiement" style="height: 24px; filter: brightness(0.8);">
                                        </div>
                                        <p class="small text-muted mt-2 mb-0"><i class="fas fa-shield-alt mr-1" style="color: #FF7B00;"></i>Paiement 100% sécurisé</p>
                                    </div>
                                    <div id="card-errors" class="text-danger mt-2"></div>
                                </form>
                            {% else %}
                                <div class="alert alert-warning" role="alert">
                                    Aucun planning disponible pour ce coach. Veuillez sélectionner un autre coach ou contacter le support.
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('css/paiement.css') }}">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        $(document).ready(function() {
            // Vérifier si un planning existe avant d'initialiser Stripe
            {% if planning %}
            // Log pour vérifier la clé publique côté client
            console.log('Clé publique Stripe:', '{{ stripe_public_key }}');

            // Initialisation de Stripe avec votre clé publique
            const stripe = Stripe('{{ stripe_public_key }}');
            const elements = stripe.elements();

            // Créer des éléments séparés pour chaque champ
            const cardNumber = elements.create('cardNumber', {
                style: {
                    base: {
                        color: '#fff',
                        fontSize: '16px',
                        '::placeholder': {
                            color: '#aab7c4'
                        }
                    },
                    invalid: {
                        color: '#ff5555'
                    }
                }
            });
            const cardExpiry = elements.create('cardExpiry', {
                style: {
                    base: {
                        color: '#fff',
                        fontSize: '16px',
                        '::placeholder': {
                            color: '#aab7c4'
                        }
                    },
                    invalid: {
                        color: '#ff5555'
                    }
                }
            });
            const cardCvc = elements.create('cardCvc', {
                style: {
                    base: {
                        color: '#fff',
                        fontSize: '16px',
                        '::placeholder': {
                            color: '#aab7c4'
                        }
                    },
                    invalid: {
                        color: '#ff5555'
                    }
                }
            });

            // Monter les éléments dans le DOM
            cardNumber.mount('#card-number-element');
            cardExpiry.mount('#card-expiry-element');
            cardCvc.mount('#card-cvc-element');

            // Afficher les erreurs de validation pour chaque élément
            const displayError = document.getElementById('card-errors');
            [cardNumber, cardExpiry, cardCvc].forEach(element => {
                element.on('change', (event) => {
                    if (event.error) {
                        displayError.textContent = event.error.message;
                    } else {
                        displayError.textContent = '';
                    }
                });
            });

            // Gestion de la soumission du formulaire
            const form = document.getElementById('payment-form');
            form.addEventListener('submit', async (event) => {
                event.preventDefault();

                // Désactiver le bouton pour éviter les soumissions multiples
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = true;

                // Récupérer le nom du titulaire
                const cardholderName = document.querySelector('input[placeholder="John Doe"]').value;

                try {
                    // Créer un Payment Intent côté serveur
                    const planningId = {{ planning.id }};
                    const response = await fetch(`/create-payment-intent/${planningId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    const { clientSecret, error } = await response.json();

                    if (error) {
                        displayError.textContent = error;
                        submitButton.disabled = false;
                        return;
                    }

                    console.log('Client Secret reçu:', clientSecret);

                    // Confirmer le paiement avec Stripe
                    const result = await stripe.confirmCardPayment(clientSecret, {
                        payment_method: {
                            card: cardNumber,
                            billing_details: {
                                name: cardholderName
                            }
                        }
                    });

                    console.log('Résultat de confirmCardPayment:', result);

                    if (result.error) {
                        displayError.textContent = result.error.message;
                        submitButton.disabled = false;
                        return;
                    }

                    const paymentIntent = result.paymentIntent;
                    console.log('Statut du PaymentIntent:', paymentIntent.status);

                    if (paymentIntent.status === 'succeeded') {
                        console.log('Paiement réussi, redirection...');
                        window.location.href = '{{ path('paiement_success') }}?payment_intent=' + paymentIntent.id;
                    } else if (paymentIntent.status === 'requires_action') {
                        // Gérer les cas comme 3D Secure
                        const { error: actionError } = await stripe.handleCardAction(clientSecret);
                        if (actionError) {
                            displayError.textContent = actionError.message;
                            submitButton.disabled = false;
                            return;
                        }

                        // Vérifier à nouveau le statut après l'action
                        const { paymentIntent: updatedIntent, error: finalError } = await stripe.retrievePaymentIntent(clientSecret);
                        if (finalError) {
                            displayError.textContent = finalError.message;
                            submitButton.disabled = false;
                            return;
                        }

                        if (updatedIntent.status === 'succeeded') {
                            console.log('Paiement réussi après 3D Secure, redirection...');
                            window.location.href = '{{ path('paiement_success') }}?payment_intent=' + updatedIntent.id;
                        } else {
                            displayError.textContent = 'Paiement non complété. Statut: ' + updatedIntent.status;
                            submitButton.disabled = false;
                        }
                    } else {
                        displayError.textContent = 'Paiement non complété. Statut: ' + paymentIntent.status;
                        submitButton.disabled = false;
                    }
                } catch (err) {
                    console.error('Erreur inattendue:', err);
                    displayError.textContent = 'Une erreur inattendue s\'est produite. Veuillez réessayer.';
                    submitButton.disabled = false;
                }
            });

            // Activer les tooltips de Bootstrap
            $('[data-toggle="tooltip"]').tooltip();
            {% endif %}
        });
    </script>
{% endblock %}