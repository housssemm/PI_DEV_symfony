{% extends 'base1.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <title>Tableau de Bord Admin</title>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    body {
        background-color: #1a1a1a;
        color: white;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .container {
        margin-top: 50px;
    }
    .card {
        background-color: #2d2d2d;
        border: none;
        border-radius: 10px;
        margin-bottom: 20px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(255, 107, 1, 0.3);
    }
    .card-header {
        background-color: #ff6b01;
        color: white;
        font-weight: bold;
    }
    .card-body {
        color: white;
    }
    .card-title {
        color: white;
    }
    .card-text {
        color: white;
    }
    .chart-container {
        position: relative;
        height: 40vh;
        width: 80vw;
    }
    .btn-validate {
        background-color: #28a745;
        color: white;
    }
    .btn-reject {
        background-color: #dc3545;
        color: white;
    }
</style>
{% endblock %}
{% block body %}
    <body>
    <div class="container">
        <h1 class="text-center mb-4">Tableau de Bord Administrateur</h1>



        <!-- Messages flash pour succès et erreurs -->
        {% for message in app.flashes('success') %}
            <div class="alert alert-success">{{ message }}</div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
        {% endfor %}


        <div class="row mb-5">
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">Adhérents</div>
                    <div class="card-body">
                        <h2 class="card-title" id="adherentCount">0</h2> <!-- Départ à 0 -->
                        <p class="card-text">Nombre total d'adhérents</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">Coachs</div>
                    <div class="card-body">
                        <h2 class="card-title" id="coachCount">0</h2> <!-- Départ à 0 -->
                        <p class="card-text">Nombre de coachs validés</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">Créateurs d'événements</div>
                    <div class="card-body">
                        <h2 class="card-title" id="createurCount">0</h2> <!-- Départ à 0 -->
                        <p class="card-text">Nombre de créateurs validés</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">Investisseurs</div>
                    <div class="card-body">
                        <h2 class="card-title" id="investisseurCount">0</h2> <!-- Départ à 0 -->
                        <p class="card-text">Nombre d'investisseurs validés</p>
                    </div>
                </div>
            </div>
        </div>
        <!-- Graphique et Total côte à côte -->
        <div class="row mb-5">
            <div class="col-md-8">
                <div class="chart-container" style="width: 100%;">
                    <canvas id="userChart"></canvas>
                </div>
            </div>
            <div class="col-md-4 text-center">
                <h2 style="color: #ff8c00; font-size: 2.5rem;">Total Utilisateurs</h2>
                <p id="totalUsers" style="font-size: 3.5rem; font-weight: bold;">0</p> <!-- Départ à 0 -->
            </div>
        </div>

        <h2 class="text-center mb-4">Demandes de Validation</h2>

        <!-- Section Coachs -->
        <h3 class="text-center mb-3">Coachs</h3>
        <div class="row">
            {% for user in users %}
                {% if user.getDiscriminator() == 'coach' %}
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">Coach</div>
                            <div class="card-body">
                                {% if user.image %}
                                    <img src="{{ asset('uploads/images/' ~ user.image) }}" alt="Image de {{ user.nom }}" class="img-fluid mb-3" style="max-height: 150px;">
                                {% else %}
                                    <p class="card-text">Aucune image</p>
                                {% endif %}
                                <h5 class="card-title">{{ user.nom }} {{ user.prenom }}</h5>
                                <p class="card-text">Email: {{ user.email }}</p>
                                <p class="card-text">Spécialité: {{ user.specialite }}</p>
                                <p class="card-text">Années d’expérience: {{ user.anneeExperience }}</p>
                                <p class="card-text">CV:
                                    {% if user.cv %}
                                        <a href="{{ asset('uploads/cv/' ~ user.cv) }}" target="_blank">Voir le CV</a>
                                    {% else %}
                                        Non fourni
                                    {% endif %}
                                </p>
                                <p class="card-text">Note: {{ user.note ?? 'Non attribuée' }}</p>
                                <div class="d-flex justify-content-between">
                                    <button class="btn btn-validate" onclick="confirmValidation({{ user.id }})">Valider</button>
                                    <button class="btn btn-reject" onclick="confirmRejection({{ user.id }})">Rejeter</button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        </div>

        <!-- Section Investisseurs -->
        <h3 class="text-center mb-3">Investisseurs de produits</h3>
        <div class="row">
            {% for user in users %}
                {% if user.getDiscriminator() == 'investisseur_produit' %}
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">Investisseur</div>
                            <div class="card-body">
                                {% if user.image %}
                                    <img src="{{ asset('uploads/images/' ~ user.image) }}" alt="Image de {{ user.nom }}" class="img-fluid mb-3" style="max-height: 150px;">
                                {% else %}
                                    <p class="card-text">Aucune image</p>
                                {% endif %}
                                <h5 class="card-title">{{ user.nom }} {{ user.prenom }}</h5>
                                <p class="card-text">Email: {{ user.email }}</p>
                                <p class="card-text">Nom de l’entreprise: {{ user.nomEntreprise }}</p>
                                <p class="card-text">Description: {{ user.descriptionInvestisseur }}</p>
                                <p class="card-text">Adresse: {{ user.adresseInvestisseur }}</p>
                                <p class="card-text">Téléphone: {{ user.telephoneInvestisseur }}</p>
                                <div class="d-flex justify-content-between">
                                    <button class="btn btn-validate" onclick="confirmValidation({{ user.id }})">Valider</button>
                                    <button class="btn btn-reject" onclick="confirmRejection({{ user.id }})">Rejeter</button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        </div>

        <!-- Section Créateurs d'événements -->
        <h3 class="text-center mb-3">Créateurs d'événements</h3>
        <div class="row">
            {% for user in users %}
                {% if user.getDiscriminator() == 'createur_evenement' %}
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">Créateur d'événements</div>
                            <div class="card-body">
                                {% if user.image %}
                                    <img src="{{ asset('uploads/images/' ~ user.image) }}" alt="Image de {{ user.nom }}" class="img-fluid mb-3" style="max-height: 150px;">
                                {% else %}
                                    <p class="card-text">Aucune image</p>
                                {% endif %}
                                <h5 class="card-title">{{ user.nom }} {{ user.prenom }}</h5>
                                <p class="card-text">Email: {{ user.email }}</p>
                                <p class="card-text">Nom de l’organisation: {{ user.nomOrganisation }}</p>
                                <p class="card-text">Description: {{ user.descriptionCreateur }}</p>
                                <p class="card-text">Adresse: {{ user.adresseCreateur }}</p>
                                <p class="card-text">Téléphone: {{ user.telephoneCreateur }}</p>
                                <div class="d-flex justify-content-between">
                                    <button class="btn btn-validate" onclick="confirmValidation({{ user.id }})">Valider</button>
                                    <button class="btn btn-reject" onclick="confirmRejection({{ user.id }})">Rejeter</button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        </div>
        <script>
            // Fonction pour animer un compteur
            function animateCounter(elementId, endValue, duration) {
                let start = 0;
                const stepTime = Math.abs(Math.floor(duration / endValue));
                const element = document.getElementById(elementId);

                const counter = setInterval(() => {
                    start += 1;
                    element.textContent = start;
                    if (start >= endValue) {
                        clearInterval(counter);
                        element.textContent = endValue; // Assurer la valeur exacte
                    }
                }, stepTime);
            }

            // Lancer les animations au chargement
            window.onload = function() {
                animateCounter('adherentCount', {{ adherentCount }}, 500); // 1 seconde
                animateCounter('coachCount', {{ coachCount }}, 500);
                animateCounter('createurCount', {{ createurCount }}, 500);
                animateCounter('investisseurCount', {{ investisseurCount }}, 500);
                animateCounter('totalUsers', {{ totalUsers }}, 500);
            };
        </script>
        <script>
            function confirmValidation(userId) {
                Swal.fire({
                    title: 'Confirmation',
                    text: 'Voulez-vous vraiment accepter cet utilisateur ?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Oui, valider',
                    cancelButtonText: 'Non, annuler'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/admin/validate/' + userId, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-CSRF-Token': '{{ csrf_token }}'
                            }
                        }).then(response => {
                            if (response.ok) {
                                Swal.fire({
                                    title: 'Succès',
                                    text: 'Utilisateur ajouté avec succès !',
                                    icon: 'success',
                                    confirmButtonColor: '#28a745'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Erreur',
                                    text: 'Une erreur est survenue lors de la validation.',
                                    icon: 'error',
                                    confirmButtonColor: '#dc3545'
                                });
                            }
                        });
                    }
                });
            }

            function confirmRejection(userId) {
                Swal.fire({
                    title: 'Confirmation',
                    text: 'Voulez-vous vraiment rejeter et supprimer cet utilisateur ?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Oui, supprimer',
                    cancelButtonText: 'Non, annuler'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/admin/reject/' + userId, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-CSRF-Token': '{{ csrf_token }}'
                            }
                        }).then(response => response.text().then(text => {
                            if (response.ok) {
                                Swal.fire({
                                    title: 'Succès',
                                    text: 'Utilisateur supprimé avec succès !',
                                    icon: 'success',
                                    confirmButtonColor: '#28a745'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Erreur',
                                    text: text || 'Une erreur est survenue lors de la suppression.',
                                    icon: 'error',
                                    confirmButtonColor: '#dc3545'
                                });
                            }
                        }));
                    }
                });
            }
        </script>
        <script>
            const ctx = document.getElementById('userChart').getContext('2d');
            const userChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Adhérents', 'Coachs', 'Créateurs', 'Investisseurs'],
                    datasets: [{
                        label: 'Nombre d\'utilisateurs',
                        data: [{{ adherentCount }}, {{ coachCount }}, {{ createurCount }}, {{ investisseurCount }}],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y',
                    scales: {
                        x: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    </div>
    </body>
{% endblock %}